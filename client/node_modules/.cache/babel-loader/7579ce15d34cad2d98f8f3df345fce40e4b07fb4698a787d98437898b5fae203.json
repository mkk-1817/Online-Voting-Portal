{"ast":null,"code":"/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, f as findIonContent, p as printIonContentErrorMsg } from './index8.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate.js';\nimport { g as getElementRoot, m as clamp, r as raf, d as inheritAttributes, l as hasLazyBuild } from './helpers.js';\nimport { c as createLockController } from './lock-controller.js';\nimport { p as printIonWarning } from './index6.js';\nimport { g as getCapacitor } from './capacitor.js';\nimport { G as GESTURE, O as OVERLAY_GESTURE_PRIORITY, e as createTriggerController, B as BACKDROP, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod } from './overlays.js';\nimport { g as getClassMap } from './theme.js';\nimport { e as deepReady, w as waitForMount } from './index2.js';\nimport { b as getIonMode, c as config } from './ionic-global.js';\nimport { KEYBOARD_DID_OPEN } from './keyboard2.js';\nimport { c as createAnimation } from './animation.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { createGesture } from './index3.js';\nimport { w as win } from './index5.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\nvar Style;\n(function (Style) {\n  Style[\"Dark\"] = \"DARK\";\n  Style[\"Light\"] = \"LIGHT\";\n  Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nconst StatusBar = {\n  getEngine() {\n    const capacitor = getCapacitor();\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('StatusBar')) {\n      return capacitor.Plugins.StatusBar;\n    }\n    return undefined;\n  },\n  // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\n  supportsDefaultStatusBarStyle() {\n    const capacitor = getCapacitor();\n    /**\r\n     * The 'DEFAULT' status bar style was added\r\n     * to the @capacitor/status-bar plugin in Capacitor 3.\r\n     * PluginHeaders is only supported in Capacitor 3+,\r\n     * so we can use this to detect Capacitor 3.\r\n     */\n    return !!(capacitor === null || capacitor === void 0 ? void 0 : capacitor.PluginHeaders);\n  },\n  setStyle(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    engine.setStyle(options);\n  },\n  getStyle: async function () {\n    const engine = this.getEngine();\n    if (!engine) {\n      return Style.Default;\n    }\n    const {\n      style\n    } = await engine.getInfo();\n    return style;\n  }\n};\n\n/**\r\n * Use y = mx + b to\r\n * figure out the backdrop value\r\n * at a particular x coordinate. This\r\n * is useful when the backdrop does\r\n * not begin to fade in until after\r\n * the 0 breakpoint.\r\n */\nconst getBackdropValueForSheet = (x, backdropBreakpoint) => {\n  /**\r\n   * We will use these points:\r\n   * (backdropBreakpoint, 0)\r\n   * (maxBreakpoint, 1)\r\n   * We know that at the beginning breakpoint,\r\n   * the backdrop will be hidden. We also\r\n   * know that at the maxBreakpoint, the backdrop\r\n   * must be fully visible. maxBreakpoint should\r\n   * always be 1 even if the maximum value\r\n   * of the breakpoints array is not 1 since\r\n   * the animation runs from a progress of 0\r\n   * to a progress of 1.\r\n   * m = (y2 - y1) / (x2 - x1)\r\n   *\r\n   * This is simplified from:\r\n   * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\r\n   *\r\n   * If the backdropBreakpoint is 1, we return 0 as the\r\n   * backdrop is completely hidden.\r\n   *\r\n   */\n  if (backdropBreakpoint === 1) {\n    return 0;\n  }\n  const slope = 1 / (1 - backdropBreakpoint);\n  /**\r\n   * From here, compute b which is\r\n   * the backdrop opacity if the offset\r\n   * is 0. If the backdrop does not\r\n   * begin to fade in until after the\r\n   * 0 breakpoint, this b value will be\r\n   * negative. This is fine as we never pass\r\n   * b directly into the animation keyframes.\r\n   * b = y - mx\r\n   * Use a known point: (backdropBreakpoint, 0)\r\n   * This is simplified from:\r\n   * b = 0 - (backdropBreakpoint * slope)\r\n   */\n  const b = -(backdropBreakpoint * slope);\n  /**\r\n   * Finally, we can now determine the\r\n   * backdrop offset given an arbitrary\r\n   * gesture offset.\r\n   */\n  return x * slope + b;\n};\n/**\r\n * The tablet/desktop card modal activates\r\n * when the window width is >= 768.\r\n * At that point, the presenting element\r\n * is not transformed, so we do not need to\r\n * adjust the status bar color.\r\n *\r\n * Note: We check supportsDefaultStatusBarStyle so that\r\n * Capacitor <= 2 users do not get their status bar\r\n * stuck in an inconsistent state due to a lack of\r\n * support for Style.Default.\r\n */\nconst setCardStatusBarDark = () => {\n  // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\n  if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n    return;\n  }\n  StatusBar.setStyle({\n    style: Style.Dark\n  });\n};\nconst setCardStatusBarDefault = (defaultStyle = Style.Default) => {\n  // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\n  if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n    return;\n  }\n  StatusBar.setStyle({\n    style: defaultStyle\n  });\n};\nconst handleCanDismiss = async (el, animation) => {\n  /**\r\n   * If canDismiss is not a function\r\n   * then we can return early. If canDismiss is `true`,\r\n   * then canDismissBlocksGesture is `false` as canDismiss\r\n   * will never interrupt the gesture. As a result,\r\n   * this code block is never reached. If canDismiss is `false`,\r\n   * then we never dismiss.\r\n   */\n  if (typeof el.canDismiss !== 'function') {\n    return;\n  }\n  /**\r\n   * Run the canDismiss callback.\r\n   * If the function returns `true`,\r\n   * then we can proceed with dismiss.\r\n   */\n  const shouldDismiss = await el.canDismiss(undefined, GESTURE);\n  if (!shouldDismiss) {\n    return;\n  }\n  /**\r\n   * If canDismiss resolved after the snap\r\n   * back animation finished, we can\r\n   * dismiss immediately.\r\n   *\r\n   * If canDismiss resolved before the snap\r\n   * back animation finished, we need to\r\n   * wait until the snap back animation is\r\n   * done before dismissing.\r\n   */\n  if (animation.isRunning()) {\n    animation.onFinish(() => {\n      el.dismiss(undefined, 'handler');\n    }, {\n      oneTimeCallback: true\n    });\n  } else {\n    el.dismiss(undefined, 'handler');\n  }\n};\n/**\r\n * This function lets us simulate a realistic spring-like animation\r\n * when swiping down on the modal.\r\n * There are two forces that we need to use to compute the spring physics:\r\n *\r\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\r\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\r\n *\r\n * Using these two values, we can calculate the Spring Force and the Dampening Force\r\n * to compute the total force applied to a spring.\r\n *\r\n * Spring Force: This force pulls a spring back into its equilibrium position.\r\n * Hooke's Law tells us that that spring force (FS) = kX.\r\n * k is the stiffness of a spring, and X is the displacement of the spring from its\r\n * equilibrium position. In this case, it is the amount by which the free end\r\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\r\n *\r\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\r\n * The dampening force, FD, can be found via this formula: FD = -cv\r\n * where c the dampening value and v is velocity.\r\n *\r\n * Therefore, the resulting force that is exerted on the block is:\r\n * F = FS + FD = -kX - cv\r\n *\r\n * Newton's 2nd Law tells us that F = ma:\r\n * ma = -kX - cv.\r\n *\r\n * For Ionic's purposes, we can assume that m = 1:\r\n * a = -kX - cv\r\n *\r\n * Imagine a block attached to the end of a spring. At equilibrium\r\n * the block is at position x = 1.\r\n * Pressing on the block moves it to position x = 0;\r\n * So, to calculate the displacement, we need to take the\r\n * current position and subtract the previous position from it.\r\n * X = x - x0 = 0 - 1 = -1.\r\n *\r\n * For Ionic's purposes, we are only pushing on the spring modal\r\n * so we have a max position of 1.\r\n * As a result, we can expand displacement to this formula:\r\n * X = x - 1\r\n *\r\n * a = -k(x - 1) - cv\r\n *\r\n * We can represent the motion of something as a function of time: f(t) = x.\r\n * The derivative of position gives us the velocity: f'(t)\r\n * The derivative of the velocity gives us the acceleration: f''(t)\r\n *\r\n * We can substitute the formula above with these values:\r\n *\r\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\r\n *\r\n * This is called a differential equation.\r\n *\r\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\r\n * This means our velocity is also zero: f'(0) = 0.\r\n *\r\n * We can cheat a bit and plug the formula into Wolfram Alpha.\r\n * However, we need to pick stiffness and dampening values:\r\n * k = 0.57\r\n * c = 15\r\n *\r\n * I picked these as they are fairly close to native iOS's spring effect\r\n * with the modal.\r\n *\r\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\r\n *\r\n * The result is a formula that lets us calculate the acceleration\r\n * for a given time t.\r\n * Note: This is the approximate form of the solution. Wolfram Alpha will\r\n * give you a complex differential equation too.\r\n */\nconst calculateSpringStep = t => {\n  return 0.00255275 * 2.71828 ** (-14.9619 * t) - 1.00255 * 2.71828 ** (-0.0380968 * t) + 1;\n};\n\n// Defaults for the card swipe animation\nconst SwipeToCloseDefaults = {\n  MIN_PRESENTING_SCALE: 0.93\n};\nconst createSwipeToCloseGesture = (el, animation, statusBarStyle, onDismiss) => {\n  /**\r\n   * The step value at which a card modal\r\n   * is eligible for dismissing via gesture.\r\n   */\n  const DISMISS_THRESHOLD = 0.5;\n  const height = el.offsetHeight;\n  let isOpen = false;\n  let canDismissBlocksGesture = false;\n  let contentEl = null;\n  let scrollEl = null;\n  const canDismissMaxStep = 0.2;\n  let initialScrollY = true;\n  let lastStep = 0;\n  const getScrollY = () => {\n    if (contentEl && isIonContent(contentEl)) {\n      return contentEl.scrollY;\n      /**\r\n       * Custom scroll containers are intended to be\r\n       * used with virtual scrolling, so we assume\r\n       * there is scrolling in this case.\r\n       */\n    } else {\n      return true;\n    }\n  };\n  const canStart = detail => {\n    const target = detail.event.target;\n    if (target === null || !target.closest) {\n      return true;\n    }\n    /**\r\n     * If we are swiping on the content,\r\n     * swiping should only be possible if\r\n     * the content is scrolled all the way\r\n     * to the top so that we do not interfere\r\n     * with scrolling.\r\n     *\r\n     * We cannot assume that the `ion-content`\r\n     * target will remain consistent between\r\n     * swipes. For example, when using\r\n     * ion-nav within a card modal it is\r\n     * possible to swipe, push a view, and then\r\n     * swipe again. The target content will not\r\n     * be the same between swipes.\r\n     */\n    contentEl = findClosestIonContent(target);\n    if (contentEl) {\n      /**\r\n       * The card should never swipe to close\r\n       * on the content with a refresher.\r\n       * Note: We cannot solve this by making the\r\n       * swipeToClose gesture have a higher priority\r\n       * than the refresher gesture as the iOS native\r\n       * refresh gesture uses a scroll listener in\r\n       * addition to a gesture.\r\n       *\r\n       * Note: Do not use getScrollElement here\r\n       * because we need this to be a synchronous\r\n       * operation, and getScrollElement is\r\n       * asynchronous.\r\n       */\n      if (isIonContent(contentEl)) {\n        const root = getElementRoot(contentEl);\n        scrollEl = root.querySelector('.inner-scroll');\n      } else {\n        scrollEl = contentEl;\n      }\n      const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n      return !hasRefresherInContent && scrollEl.scrollTop === 0;\n    }\n    /**\r\n     * Card should be swipeable on all\r\n     * parts of the modal except for the footer.\r\n     */\n    const footer = target.closest('ion-footer');\n    if (footer === null) {\n      return true;\n    }\n    return false;\n  };\n  const onStart = detail => {\n    const {\n      deltaY\n    } = detail;\n    /**\r\n     * Get the initial scrollY value so\r\n     * that we can correctly reset the scrollY\r\n     * prop when the gesture ends.\r\n     */\n    initialScrollY = getScrollY();\n    /**\r\n     * If canDismiss is anything other than `true`\r\n     * then users should be able to swipe down\r\n     * until a threshold is hit. At that point,\r\n     * the card modal should not proceed any further.\r\n     * TODO (FW-937)\r\n     * Remove undefined check\r\n     */\n    canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\n    /**\r\n     * If we are pulling down, then\r\n     * it is possible we are pulling on the\r\n     * content. We do not want scrolling to\r\n     * happen at the same time as the gesture.\r\n     */\n    if (deltaY > 0 && contentEl) {\n      disableContentScrollY(contentEl);\n    }\n    animation.progressStart(true, isOpen ? 1 : 0);\n  };\n  const onMove = detail => {\n    const {\n      deltaY\n    } = detail;\n    /**\r\n     * If we are pulling down, then\r\n     * it is possible we are pulling on the\r\n     * content. We do not want scrolling to\r\n     * happen at the same time as the gesture.\r\n     */\n    if (deltaY > 0 && contentEl) {\n      disableContentScrollY(contentEl);\n    }\n    /**\r\n     * If we are swiping on the content\r\n     * then the swipe gesture should only\r\n     * happen if we are pulling down.\r\n     *\r\n     * However, if we pull up and\r\n     * then down such that the scroll position\r\n     * returns to 0, we should be able to swipe\r\n     * the card.\r\n     */\n    const step = detail.deltaY / height;\n    /**\r\n     * Check if user is swiping down and\r\n     * if we have a canDismiss value that\r\n     * should block the gesture from\r\n     * proceeding,\r\n     */\n    const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n    /**\r\n     * If we are blocking the gesture from dismissing,\r\n     * set the max step value so that the sheet cannot be\r\n     * completely hidden.\r\n     */\n    const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    /**\r\n     * If we are blocking the gesture from\r\n     * dismissing, calculate the spring modifier value\r\n     * this will be added to the starting breakpoint\r\n     * value to give the gesture a spring-like feeling.\r\n     * Note that the starting breakpoint is always 0,\r\n     * so we omit adding 0 to the result.\r\n     */\n    const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n    const clampedStep = clamp(0.0001, processedStep, maxStep);\n    animation.progressStep(clampedStep);\n    /**\r\n     * When swiping down half way, the status bar style\r\n     * should be reset to its default value.\r\n     *\r\n     * We track lastStep so that we do not fire these\r\n     * functions on every onMove, only when the user has\r\n     * crossed a certain threshold.\r\n     */\n    if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\n      setCardStatusBarDefault(statusBarStyle);\n      /**\r\n       * However, if we swipe back up, then the\r\n       * status bar style should be set to have light\r\n       * text on a dark background.\r\n       */\n    } else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\n      setCardStatusBarDark();\n    }\n    lastStep = clampedStep;\n  };\n  const onEnd = detail => {\n    const velocity = detail.velocityY;\n    const step = detail.deltaY / height;\n    const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n    const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n    const clampedStep = clamp(0.0001, processedStep, maxStep);\n    const threshold = (detail.deltaY + velocity * 1000) / height;\n    /**\r\n     * If canDismiss blocks\r\n     * the swipe gesture, then the\r\n     * animation can never complete until\r\n     * canDismiss is checked.\r\n     */\n    const shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\n    let newStepValue = shouldComplete ? -0.001 : 0.001;\n    if (!shouldComplete) {\n      animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n      newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\n    } else {\n      animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n      newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\n    }\n    const duration = shouldComplete ? computeDuration(step * height, velocity) : computeDuration((1 - clampedStep) * height, velocity);\n    isOpen = shouldComplete;\n    gesture.enable(false);\n    if (contentEl) {\n      resetContentScrollY(contentEl, initialScrollY);\n    }\n    animation.onFinish(() => {\n      if (!shouldComplete) {\n        gesture.enable(true);\n      }\n    }).progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n    /**\r\n     * If the canDismiss value blocked the gesture\r\n     * from proceeding, then we should ignore whatever\r\n     * shouldComplete is. Whether or not the modal\r\n     * animation should complete is now determined by\r\n     * canDismiss.\r\n     *\r\n     * If the user swiped >25% of the way\r\n     * to the max step, then we should\r\n     * check canDismiss. 25% was chosen\r\n     * to avoid accidental swipes.\r\n     */\n    if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {\n      handleCanDismiss(el, animation);\n    } else if (shouldComplete) {\n      onDismiss();\n    }\n  };\n  const gesture = createGesture({\n    el,\n    gestureName: 'modalSwipeToClose',\n    gesturePriority: OVERLAY_GESTURE_PRIORITY,\n    direction: 'y',\n    threshold: 10,\n    canStart,\n    onStart,\n    onMove,\n    onEnd\n  });\n  return gesture;\n};\nconst computeDuration = (remaining, velocity) => {\n  return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\nconst createSheetEnterAnimation = opts => {\n  const {\n    currentBreakpoint,\n    backdropBreakpoint\n  } = opts;\n  /**\r\n   * If the backdropBreakpoint is undefined, then the backdrop\r\n   * should always fade in. If the backdropBreakpoint came before the\r\n   * current breakpoint, then the backdrop should be fading in.\r\n   */\n  const shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\n  const initialBackdrop = shouldShowBackdrop ? `calc(var(--backdrop-opacity) * ${currentBreakpoint})` : '0';\n  const backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\n  if (shouldShowBackdrop) {\n    backdropAnimation.beforeStyles({\n      'pointer-events': 'none'\n    }).afterClearStyles(['pointer-events']);\n  }\n  const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([{\n    offset: 0,\n    opacity: 1,\n    transform: 'translateY(100%)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: `translateY(${100 - currentBreakpoint * 100}%)`\n  }]);\n  return {\n    wrapperAnimation,\n    backdropAnimation\n  };\n};\nconst createSheetLeaveAnimation = opts => {\n  const {\n    currentBreakpoint,\n    backdropBreakpoint\n  } = opts;\n  /**\r\n   * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\r\n   * is defined, so we need to account for that offset by figuring out\r\n   * what the current backdrop value should be.\r\n   */\n  const backdropValue = `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint)})`;\n  const defaultBackdrop = [{\n    offset: 0,\n    opacity: backdropValue\n  }, {\n    offset: 1,\n    opacity: 0\n  }];\n  const customBackdrop = [{\n    offset: 0,\n    opacity: backdropValue\n  }, {\n    offset: backdropBreakpoint,\n    opacity: 0\n  }, {\n    offset: 1,\n    opacity: 0\n  }];\n  const backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\n  const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([{\n    offset: 0,\n    opacity: 1,\n    transform: `translateY(${100 - currentBreakpoint * 100}%)`\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: `translateY(100%)`\n  }]);\n  return {\n    wrapperAnimation,\n    backdropAnimation\n  };\n};\nconst createEnterAnimation$1 = () => {\n  const backdropAnimation = createAnimation().fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n  return {\n    backdropAnimation,\n    wrapperAnimation\n  };\n};\n/**\r\n * iOS Modal Enter Animation for the Card presentation style\r\n */\nconst iosEnterAnimation = (baseEl, opts) => {\n  const {\n    presentingEl,\n    currentBreakpoint\n  } = opts;\n  const root = getElementRoot(baseEl);\n  const {\n    wrapperAnimation,\n    backdropAnimation\n  } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({\n    opacity: 1\n  });\n  const baseAnimation = createAnimation('entering-base').addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(500).addAnimation(wrapperAnimation);\n  if (presentingEl) {\n    const isMobile = window.innerWidth < 768;\n    const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const presentingAnimation = createAnimation().beforeStyles({\n      transform: 'translateY(0)',\n      'transform-origin': 'top center',\n      overflow: 'hidden'\n    });\n    const bodyEl = document.body;\n    if (isMobile) {\n      /**\r\n       * Fallback for browsers that does not support `max()` (ex: Firefox)\r\n       * No need to worry about statusbar padding since engines like Gecko\r\n       * are not used as the engine for standalone Cordova/Capacitor apps\r\n       */\n      const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      const modalTransform = hasCardModal ? '-10px' : transformOffset;\n      const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n      presentingAnimation.afterStyles({\n        transform: finalTransform\n      }).beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black')).addElement(presentingEl).keyframes([{\n        offset: 0,\n        filter: 'contrast(1)',\n        transform: 'translateY(0px) scale(1)',\n        borderRadius: '0px'\n      }, {\n        offset: 1,\n        filter: 'contrast(0.85)',\n        transform: finalTransform,\n        borderRadius: '10px 10px 0 0'\n      }]);\n      baseAnimation.addAnimation(presentingAnimation);\n    } else {\n      baseAnimation.addAnimation(backdropAnimation);\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '0', '1');\n      } else {\n        const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation.afterStyles({\n          transform: finalTransform\n        }).addElement(presentingElRoot.querySelector('.modal-wrapper')).keyframes([{\n          offset: 0,\n          filter: 'contrast(1)',\n          transform: 'translateY(0) scale(1)'\n        }, {\n          offset: 1,\n          filter: 'contrast(0.85)',\n          transform: finalTransform\n        }]);\n        const shadowAnimation = createAnimation().afterStyles({\n          transform: finalTransform\n        }).addElement(presentingElRoot.querySelector('.modal-shadow')).keyframes([{\n          offset: 0,\n          opacity: '1',\n          transform: 'translateY(0) scale(1)'\n        }, {\n          offset: 1,\n          opacity: '0',\n          transform: finalTransform\n        }]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  } else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n  return baseAnimation;\n};\nconst createLeaveAnimation$1 = () => {\n  const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n  return {\n    backdropAnimation,\n    wrapperAnimation\n  };\n};\n/**\r\n * iOS Modal Leave Animation\r\n */\nconst iosLeaveAnimation = (baseEl, opts, duration = 500) => {\n  const {\n    presentingEl,\n    currentBreakpoint\n  } = opts;\n  const root = getElementRoot(baseEl);\n  const {\n    wrapperAnimation,\n    backdropAnimation\n  } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({\n    opacity: 1\n  });\n  const baseAnimation = createAnimation('leaving-base').addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(duration).addAnimation(wrapperAnimation);\n  if (presentingEl) {\n    const isMobile = window.innerWidth < 768;\n    const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const presentingAnimation = createAnimation().beforeClearStyles(['transform']).afterClearStyles(['transform']).onFinish(currentStep => {\n      // only reset background color if this is the last card-style modal\n      if (currentStep !== 1) {\n        return;\n      }\n      presentingEl.style.setProperty('overflow', '');\n      const numModals = Array.from(bodyEl.querySelectorAll('ion-modal:not(.overlay-hidden)')).filter(m => m.presentingElement !== undefined).length;\n      if (numModals <= 1) {\n        bodyEl.style.setProperty('background-color', '');\n      }\n    });\n    const bodyEl = document.body;\n    if (isMobile) {\n      const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      const modalTransform = hasCardModal ? '-10px' : transformOffset;\n      const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n      presentingAnimation.addElement(presentingEl).keyframes([{\n        offset: 0,\n        filter: 'contrast(0.85)',\n        transform: finalTransform,\n        borderRadius: '10px 10px 0 0'\n      }, {\n        offset: 1,\n        filter: 'contrast(1)',\n        transform: 'translateY(0px) scale(1)',\n        borderRadius: '0px'\n      }]);\n      baseAnimation.addAnimation(presentingAnimation);\n    } else {\n      baseAnimation.addAnimation(backdropAnimation);\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '1', '0');\n      } else {\n        const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation.addElement(presentingElRoot.querySelector('.modal-wrapper')).afterStyles({\n          transform: 'translate3d(0, 0, 0)'\n        }).keyframes([{\n          offset: 0,\n          filter: 'contrast(0.85)',\n          transform: finalTransform\n        }, {\n          offset: 1,\n          filter: 'contrast(1)',\n          transform: 'translateY(0) scale(1)'\n        }]);\n        const shadowAnimation = createAnimation().addElement(presentingElRoot.querySelector('.modal-shadow')).afterStyles({\n          transform: 'translateY(0) scale(1)'\n        }).keyframes([{\n          offset: 0,\n          opacity: '0',\n          transform: finalTransform\n        }, {\n          offset: 1,\n          opacity: '1',\n          transform: 'translateY(0) scale(1)'\n        }]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  } else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n  return baseAnimation;\n};\nconst createEnterAnimation = () => {\n  const backdropAnimation = createAnimation().fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  const wrapperAnimation = createAnimation().keyframes([{\n    offset: 0,\n    opacity: 0.01,\n    transform: 'translateY(40px)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: `translateY(0px)`\n  }]);\n  return {\n    backdropAnimation,\n    wrapperAnimation\n  };\n};\n/**\r\n * Md Modal Enter Animation\r\n */\nconst mdEnterAnimation = (baseEl, opts) => {\n  const {\n    currentBreakpoint\n  } = opts;\n  const root = getElementRoot(baseEl);\n  const {\n    wrapperAnimation,\n    backdropAnimation\n  } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n  return createAnimation().addElement(baseEl).easing('cubic-bezier(0.36,0.66,0.04,1)').duration(280).addAnimation([backdropAnimation, wrapperAnimation]);\n};\nconst createLeaveAnimation = () => {\n  const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  const wrapperAnimation = createAnimation().keyframes([{\n    offset: 0,\n    opacity: 0.99,\n    transform: `translateY(0px)`\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: 'translateY(40px)'\n  }]);\n  return {\n    backdropAnimation,\n    wrapperAnimation\n  };\n};\n/**\r\n * Md Modal Leave Animation\r\n */\nconst mdLeaveAnimation = (baseEl, opts) => {\n  const {\n    currentBreakpoint\n  } = opts;\n  const root = getElementRoot(baseEl);\n  const {\n    wrapperAnimation,\n    backdropAnimation\n  } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n  return createAnimation().easing('cubic-bezier(0.47,0,0.745,0.715)').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\nconst createSheetGesture = (baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation, breakpoints = [], getCurrentBreakpoint, onDismiss, onBreakpointChange) => {\n  // Defaults for the sheet swipe animation\n  const defaultBackdrop = [{\n    offset: 0,\n    opacity: 'var(--backdrop-opacity)'\n  }, {\n    offset: 1,\n    opacity: 0.01\n  }];\n  const customBackdrop = [{\n    offset: 0,\n    opacity: 'var(--backdrop-opacity)'\n  }, {\n    offset: 1 - backdropBreakpoint,\n    opacity: 0\n  }, {\n    offset: 1,\n    opacity: 0\n  }];\n  const SheetDefaults = {\n    WRAPPER_KEYFRAMES: [{\n      offset: 0,\n      transform: 'translateY(0%)'\n    }, {\n      offset: 1,\n      transform: 'translateY(100%)'\n    }],\n    BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop\n  };\n  const contentEl = baseEl.querySelector('ion-content');\n  const height = wrapperEl.clientHeight;\n  let currentBreakpoint = initialBreakpoint;\n  let offset = 0;\n  let canDismissBlocksGesture = false;\n  const canDismissMaxStep = 0.95;\n  const wrapperAnimation = animation.childAnimations.find(ani => ani.id === 'wrapperAnimation');\n  const backdropAnimation = animation.childAnimations.find(ani => ani.id === 'backdropAnimation');\n  const maxBreakpoint = breakpoints[breakpoints.length - 1];\n  const minBreakpoint = breakpoints[0];\n  const enableBackdrop = () => {\n    baseEl.style.setProperty('pointer-events', 'auto');\n    backdropEl.style.setProperty('pointer-events', 'auto');\n    /**\r\n     * When the backdrop is enabled, elements such\r\n     * as inputs should not be focusable outside\r\n     * the sheet.\r\n     */\n    baseEl.classList.remove('ion-disable-focus-trap');\n  };\n  const disableBackdrop = () => {\n    baseEl.style.setProperty('pointer-events', 'none');\n    backdropEl.style.setProperty('pointer-events', 'none');\n    /**\r\n     * When the backdrop is enabled, elements such\r\n     * as inputs should not be focusable outside\r\n     * the sheet.\r\n     * Adding this class disables focus trapping\r\n     * for the sheet temporarily.\r\n     */\n    baseEl.classList.add('ion-disable-focus-trap');\n  };\n  /**\r\n   * After the entering animation completes,\r\n   * we need to set the animation to go from\r\n   * offset 0 to offset 1 so that users can\r\n   * swipe in any direction. We then set the\r\n   * animation offset to the current breakpoint\r\n   * so there is no flickering.\r\n   */\n  if (wrapperAnimation && backdropAnimation) {\n    wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n    backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n    animation.progressStart(true, 1 - currentBreakpoint);\n    /**\r\n     * If backdrop is not enabled, then content\r\n     * behind modal should be clickable. To do this, we need\r\n     * to remove pointer-events from ion-modal as a whole.\r\n     * ion-backdrop and .modal-wrapper always have pointer-events: auto\r\n     * applied, so the modal content can still be interacted with.\r\n     */\n    const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n    if (shouldEnableBackdrop) {\n      enableBackdrop();\n    } else {\n      disableBackdrop();\n    }\n  }\n  if (contentEl && currentBreakpoint !== maxBreakpoint) {\n    contentEl.scrollY = false;\n  }\n  const canStart = detail => {\n    /**\r\n     * If the sheet is fully expanded and\r\n     * the user is swiping on the content,\r\n     * the gesture should not start to\r\n     * allow for scrolling on the content.\r\n     */\n    const content = detail.event.target.closest('ion-content');\n    currentBreakpoint = getCurrentBreakpoint();\n    if (currentBreakpoint === 1 && content) {\n      return false;\n    }\n    return true;\n  };\n  const onStart = () => {\n    /**\r\n     * If canDismiss is anything other than `true`\r\n     * then users should be able to swipe down\r\n     * until a threshold is hit. At that point,\r\n     * the card modal should not proceed any further.\r\n     *\r\n     * canDismiss is never fired via gesture if there is\r\n     * no 0 breakpoint. However, it can be fired if the user\r\n     * presses Esc or the hardware back button.\r\n     * TODO (FW-937)\r\n     * Remove undefined check\r\n     */\n    canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\n    /**\r\n     * If swiping on the content\r\n     * we should disable scrolling otherwise\r\n     * the sheet will expand and the content will scroll.\r\n     */\n    if (contentEl) {\n      contentEl.scrollY = false;\n    }\n    raf(() => {\n      /**\r\n       * Dismisses the open keyboard when the sheet drag gesture is started.\r\n       * Sets the focus onto the modal element.\r\n       */\n      baseEl.focus();\n    });\n    animation.progressStart(true, 1 - currentBreakpoint);\n  };\n  const onMove = detail => {\n    /**\r\n     * Given the change in gesture position on the Y axis,\r\n     * compute where the offset of the animation should be\r\n     * relative to where the user dragged.\r\n     */\n    const initialStep = 1 - currentBreakpoint;\n    const secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\n    const step = initialStep + detail.deltaY / height;\n    const isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\n    /**\r\n     * If we are blocking the gesture from dismissing,\r\n     * set the max step value so that the sheet cannot be\r\n     * completely hidden.\r\n     */\n    const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    /**\r\n     * If we are blocking the gesture from\r\n     * dismissing, calculate the spring modifier value\r\n     * this will be added to the starting breakpoint\r\n     * value to give the gesture a spring-like feeling.\r\n     * Note that when isAttemptingDismissWithCanDismiss is true,\r\n     * the modifier is always added to the breakpoint that\r\n     * appears right after the 0 breakpoint.\r\n     *\r\n     * Note that this modifier is essentially the progression\r\n     * between secondToLastBreakpoint and maxStep which is\r\n     * why we subtract secondToLastBreakpoint. This lets us get\r\n     * the result as a value from 0 to 1.\r\n     */\n    const processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined ? secondToLastBreakpoint + calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint)) : step;\n    offset = clamp(0.0001, processedStep, maxStep);\n    animation.progressStep(offset);\n  };\n  const onEnd = detail => {\n    /**\r\n     * When the gesture releases, we need to determine\r\n     * the closest breakpoint to snap to.\r\n     */\n    const velocity = detail.velocityY;\n    const threshold = (detail.deltaY + velocity * 350) / height;\n    const diff = currentBreakpoint - threshold;\n    const closest = breakpoints.reduce((a, b) => {\n      return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\n    });\n    moveSheetToBreakpoint({\n      breakpoint: closest,\n      breakpointOffset: offset,\n      canDismiss: canDismissBlocksGesture,\n      /**\r\n       * The swipe is user-driven, so we should\r\n       * always animate when the gesture ends.\r\n       */\n      animated: true\n    });\n  };\n  const moveSheetToBreakpoint = options => {\n    const {\n      breakpoint,\n      canDismiss,\n      breakpointOffset,\n      animated\n    } = options;\n    /**\r\n     * canDismiss should only prevent snapping\r\n     * when users are trying to dismiss. If canDismiss\r\n     * is present but the user is trying to swipe upwards,\r\n     * we should allow that to happen,\r\n     */\n    const shouldPreventDismiss = canDismiss && breakpoint === 0;\n    const snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\n    const shouldRemainOpen = snapToBreakpoint !== 0;\n    currentBreakpoint = 0;\n    /**\r\n     * Update the animation so that it plays from\r\n     * the last offset to the closest snap point.\r\n     */\n    if (wrapperAnimation && backdropAnimation) {\n      wrapperAnimation.keyframes([{\n        offset: 0,\n        transform: `translateY(${breakpointOffset * 100}%)`\n      }, {\n        offset: 1,\n        transform: `translateY(${(1 - snapToBreakpoint) * 100}%)`\n      }]);\n      backdropAnimation.keyframes([{\n        offset: 0,\n        opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint)})`\n      }, {\n        offset: 1,\n        opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint)})`\n      }]);\n      animation.progressStep(0);\n    }\n    /**\r\n     * Gesture should remain disabled until the\r\n     * snapping animation completes.\r\n     */\n    gesture.enable(false);\n    if (shouldPreventDismiss) {\n      handleCanDismiss(baseEl, animation);\n    } else if (!shouldRemainOpen) {\n      onDismiss();\n    }\n    return new Promise(resolve => {\n      animation.onFinish(() => {\n        if (shouldRemainOpen) {\n          /**\r\n           * Once the snapping animation completes,\r\n           * we need to reset the animation to go\r\n           * from 0 to 1 so users can swipe in any direction.\r\n           * We then set the animation offset to the current\r\n           * breakpoint so that it starts at the snapped position.\r\n           */\n          if (wrapperAnimation && backdropAnimation) {\n            raf(() => {\n              wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n              backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n              animation.progressStart(true, 1 - snapToBreakpoint);\n              currentBreakpoint = snapToBreakpoint;\n              onBreakpointChange(currentBreakpoint);\n              /**\r\n               * If the sheet is fully expanded, we can safely\r\n               * enable scrolling again.\r\n               */\n              if (contentEl && currentBreakpoint === breakpoints[breakpoints.length - 1]) {\n                contentEl.scrollY = true;\n              }\n              /**\r\n               * Backdrop should become enabled\r\n               * after the backdropBreakpoint value\r\n               */\n              const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n              if (shouldEnableBackdrop) {\n                enableBackdrop();\n              } else {\n                disableBackdrop();\n              }\n              gesture.enable(true);\n              resolve();\n            });\n          } else {\n            gesture.enable(true);\n            resolve();\n          }\n        } else {\n          resolve();\n        }\n        /**\r\n         * This must be a one time callback\r\n         * otherwise a new callback will\r\n         * be added every time onEnd runs.\r\n         */\n      }, {\n        oneTimeCallback: true\n      }).progressEnd(1, 0, animated ? 500 : 0);\n    });\n  };\n  const gesture = createGesture({\n    el: wrapperEl,\n    gestureName: 'modalSheet',\n    gesturePriority: 40,\n    direction: 'y',\n    threshold: 10,\n    canStart,\n    onStart,\n    onMove,\n    onEnd\n  });\n  return {\n    gesture,\n    moveSheetToBreakpoint\n  };\n};\nconst modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-card) .modal-wrapper,:host-context([dir=rtl]).modal-card .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}@supports selector(:dir(rtl)){:host(.modal-card:dir(rtl)) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-sheet) .modal-wrapper,:host-context([dir=rtl]).modal-sheet .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}@supports selector(:dir(rtl)){:host(.modal-sheet:dir(rtl)) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}}\";\nconst IonModalIosStyle0 = modalIosCss;\nconst modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\nconst IonModalMdStyle0 = modalMdCss;\nconst Modal = /*@__PURE__*/proxyCustomElement(class Modal extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\n    this.ionBreakpointDidChange = createEvent(this, \"ionBreakpointDidChange\", 7);\n    this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n    this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n    this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n    this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n    this.ionMount = createEvent(this, \"ionMount\", 7);\n    this.lockController = createLockController();\n    this.triggerController = createTriggerController();\n    this.coreDelegate = CoreDelegate();\n    this.isSheetModal = false;\n    this.inheritedAttributes = {};\n    this.inline = false;\n    // Whether or not modal is being dismissed via gesture\n    this.gestureAnimationDismissing = false;\n    this.onHandleClick = () => {\n      const {\n        sheetTransition,\n        handleBehavior\n      } = this;\n      if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {\n        /**\r\n         * The sheet modal should not advance to the next breakpoint\r\n         * if the handle behavior is not `cycle` or if the handle\r\n         * is clicked while the sheet is moving to a breakpoint.\r\n         */\n        return;\n      }\n      this.moveToNextBreakpoint();\n    };\n    this.onBackdropTap = () => {\n      const {\n        sheetTransition\n      } = this;\n      if (sheetTransition !== undefined) {\n        /**\r\n         * When the handle is double clicked at the largest breakpoint,\r\n         * it will start to move to the first breakpoint. While transitioning,\r\n         * the backdrop will often receive the second click. We prevent the\r\n         * backdrop from dismissing the modal while moving between breakpoints.\r\n         */\n        return;\n      }\n      this.dismiss(undefined, BACKDROP);\n    };\n    this.onLifecycle = modalEvent => {\n      const el = this.usersElement;\n      const name = LIFECYCLE_MAP[modalEvent.type];\n      if (el && name) {\n        const ev = new CustomEvent(name, {\n          bubbles: false,\n          cancelable: false,\n          detail: modalEvent.detail\n        });\n        el.dispatchEvent(ev);\n      }\n    };\n    this.presented = false;\n    this.hasController = false;\n    this.overlayIndex = undefined;\n    this.delegate = undefined;\n    this.keyboardClose = true;\n    this.enterAnimation = undefined;\n    this.leaveAnimation = undefined;\n    this.breakpoints = undefined;\n    this.initialBreakpoint = undefined;\n    this.backdropBreakpoint = 0;\n    this.handle = undefined;\n    this.handleBehavior = 'none';\n    this.component = undefined;\n    this.componentProps = undefined;\n    this.cssClass = undefined;\n    this.backdropDismiss = true;\n    this.showBackdrop = true;\n    this.animated = true;\n    this.presentingElement = undefined;\n    this.htmlAttributes = undefined;\n    this.isOpen = false;\n    this.trigger = undefined;\n    this.keepContentsMounted = false;\n    this.canDismiss = true;\n  }\n  onIsOpenChange(newValue, oldValue) {\n    if (newValue === true && oldValue === false) {\n      this.present();\n    } else if (newValue === false && oldValue === true) {\n      this.dismiss();\n    }\n  }\n  triggerChanged() {\n    const {\n      trigger,\n      el,\n      triggerController\n    } = this;\n    if (trigger) {\n      triggerController.addClickListener(el, trigger);\n    }\n  }\n  breakpointsChanged(breakpoints) {\n    if (breakpoints !== undefined) {\n      this.sortedBreakpoints = breakpoints.sort((a, b) => a - b);\n    }\n  }\n  connectedCallback() {\n    const {\n      el\n    } = this;\n    prepareOverlay(el);\n    this.triggerChanged();\n  }\n  disconnectedCallback() {\n    this.triggerController.removeClickListener();\n  }\n  componentWillLoad() {\n    const {\n      breakpoints,\n      initialBreakpoint,\n      el,\n      htmlAttributes\n    } = this;\n    const isSheetModal = this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined;\n    const attributesToInherit = ['aria-label', 'role'];\n    this.inheritedAttributes = inheritAttributes(el, attributesToInherit);\n    /**\r\n     * When using a controller modal you can set attributes\r\n     * using the htmlAttributes property. Since the above attributes\r\n     * need to be inherited inside of the modal, we need to look\r\n     * and see if these attributes are being set via htmlAttributes.\r\n     *\r\n     * We could alternatively move this to componentDidLoad to simplify the work\r\n     * here, but we'd then need to make inheritedAttributes a State variable,\r\n     * thus causing another render to always happen after the first render.\r\n     */\n    if (htmlAttributes !== undefined) {\n      attributesToInherit.forEach(attribute => {\n        const attributeValue = htmlAttributes[attribute];\n        if (attributeValue) {\n          /**\r\n           * If an attribute we need to inherit was\r\n           * set using htmlAttributes then add it to\r\n           * inheritedAttributes and remove it from htmlAttributes.\r\n           * This ensures the attribute is inherited and not\r\n           * set on the host.\r\n           *\r\n           * In this case, if an inherited attribute is set\r\n           * on the host element and using htmlAttributes then\r\n           * htmlAttributes wins, but that's not a pattern that we recommend.\r\n           * The only time you'd need htmlAttributes is when using modalController.\r\n           */\n          this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), {\n            [attribute]: htmlAttributes[attribute]\n          });\n          delete htmlAttributes[attribute];\n        }\n      });\n    }\n    if (isSheetModal) {\n      this.currentBreakpoint = this.initialBreakpoint;\n    }\n    if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\n      printIonWarning('Your breakpoints array must include the initialBreakpoint value.');\n    }\n    setOverlayId(el);\n  }\n  componentDidLoad() {\n    /**\r\n     * If modal was rendered with isOpen=\"true\"\r\n     * then we should open modal immediately.\r\n     */\n    if (this.isOpen === true) {\n      raf(() => this.present());\n    }\n    this.breakpointsChanged(this.breakpoints);\n    /**\r\n     * When binding values in frameworks such as Angular\r\n     * it is possible for the value to be set after the Web Component\r\n     * initializes but before the value watcher is set up in Stencil.\r\n     * As a result, the watcher callback may not be fired.\r\n     * We work around this by manually calling the watcher\r\n     * callback when the component has loaded and the watcher\r\n     * is configured.\r\n     */\n    this.triggerChanged();\n  }\n  /**\r\n   * Determines whether or not an overlay\r\n   * is being used inline or via a controller/JS\r\n   * and returns the correct delegate.\r\n   * By default, subsequent calls to getDelegate\r\n   * will use a cached version of the delegate.\r\n   * This is useful for calling dismiss after\r\n   * present so that the correct delegate is given.\r\n   */\n  getDelegate(force = false) {\n    if (this.workingDelegate && !force) {\n      return {\n        delegate: this.workingDelegate,\n        inline: this.inline\n      };\n    }\n    /**\r\n     * If using overlay inline\r\n     * we potentially need to use the coreDelegate\r\n     * so that this works in vanilla JS apps.\r\n     * If a developer has presented this component\r\n     * via a controller, then we can assume\r\n     * the component is already in the\r\n     * correct place.\r\n     */\n    const parentEl = this.el.parentNode;\n    const inline = this.inline = parentEl !== null && !this.hasController;\n    const delegate = this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate;\n    return {\n      inline,\n      delegate\n    };\n  }\n  /**\r\n   * Determines whether or not the\r\n   * modal is allowed to dismiss based\r\n   * on the state of the canDismiss prop.\r\n   */\n  async checkCanDismiss(data, role) {\n    const {\n      canDismiss\n    } = this;\n    if (typeof canDismiss === 'function') {\n      return canDismiss(data, role);\n    }\n    return canDismiss;\n  }\n  /**\r\n   * Present the modal overlay after it has been created.\r\n   */\n  async present() {\n    const unlock = await this.lockController.lock();\n    if (this.presented) {\n      unlock();\n      return;\n    }\n    const {\n      presentingElement,\n      el\n    } = this;\n    /**\r\n     * If the modal is presented multiple times (inline modals), we\r\n     * need to reset the current breakpoint to the initial breakpoint.\r\n     */\n    this.currentBreakpoint = this.initialBreakpoint;\n    const {\n      inline,\n      delegate\n    } = this.getDelegate(true);\n    /**\r\n     * Emit ionMount so JS Frameworks have an opportunity\r\n     * to add the child component to the DOM. The child\r\n     * component will be assigned to this.usersElement below.\r\n     */\n    this.ionMount.emit();\n    this.usersElement = await attachComponent(delegate, el, this.component, ['ion-page'], this.componentProps, inline);\n    /**\r\n     * When using the lazy loaded build of Stencil, we need to wait\r\n     * for every Stencil component instance to be ready before presenting\r\n     * otherwise there can be a flash of unstyled content. With the\r\n     * custom elements bundle we need to wait for the JS framework\r\n     * mount the inner contents of the overlay otherwise WebKit may\r\n     * get the transition incorrect.\r\n     */\n    if (hasLazyBuild(el)) {\n      await deepReady(this.usersElement);\n      /**\r\n       * If keepContentsMounted=\"true\" then the\r\n       * JS Framework has already mounted the inner\r\n       * contents so there is no need to wait.\r\n       * Otherwise, we need to wait for the JS\r\n       * Framework to mount the inner contents\r\n       * of this component.\r\n       */\n    } else if (!this.keepContentsMounted) {\n      await waitForMount();\n    }\n    writeTask(() => this.el.classList.add('show-modal'));\n    const hasCardModal = presentingElement !== undefined;\n    /**\r\n     * We need to change the status bar at the\r\n     * start of the animation so that it completes\r\n     * by the time the card animation is done.\r\n     */\n    if (hasCardModal && getIonMode(this) === 'ios') {\n      // Cache the original status bar color before the modal is presented\n      this.statusBarStyle = await StatusBar.getStyle();\n      setCardStatusBarDark();\n    }\n    await present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\n      presentingEl: presentingElement,\n      currentBreakpoint: this.initialBreakpoint,\n      backdropBreakpoint: this.backdropBreakpoint\n    });\n    /* tslint:disable-next-line */\n    if (typeof window !== 'undefined') {\n      /**\r\n       * This needs to be setup before any\r\n       * non-transition async work so it can be dereferenced\r\n       * in the dismiss method. The dismiss method\r\n       * only waits for the entering transition\r\n       * to finish. It does not wait for all of the `present`\r\n       * method to resolve.\r\n       */\n      this.keyboardOpenCallback = () => {\n        if (this.gesture) {\n          /**\r\n           * When the native keyboard is opened and the webview\r\n           * is resized, the gesture implementation will become unresponsive\r\n           * and enter a free-scroll mode.\r\n           *\r\n           * When the keyboard is opened, we disable the gesture for\r\n           * a single frame and re-enable once the contents have repositioned\r\n           * from the keyboard placement.\r\n           */\n          this.gesture.enable(false);\n          raf(() => {\n            if (this.gesture) {\n              this.gesture.enable(true);\n            }\n          });\n        }\n      };\n      window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n    }\n    if (this.isSheetModal) {\n      this.initSheetGesture();\n    } else if (hasCardModal) {\n      this.initSwipeToClose();\n    }\n    unlock();\n  }\n  initSwipeToClose() {\n    var _a;\n    if (getIonMode(this) !== 'ios') {\n      return;\n    }\n    const {\n      el\n    } = this;\n    // All of the elements needed for the swipe gesture\n    // should be in the DOM and referenced by now, except\n    // for the presenting el\n    const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n    const ani = this.animation = animationBuilder(el, {\n      presentingEl: this.presentingElement\n    });\n    const contentEl = findIonContent(el);\n    if (!contentEl) {\n      printIonContentErrorMsg(el);\n      return;\n    }\n    const statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;\n    this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, () => {\n      /**\r\n       * While the gesture animation is finishing\r\n       * it is possible for a user to tap the backdrop.\r\n       * This would result in the dismiss animation\r\n       * being played again. Typically this is avoided\r\n       * by setting `presented = false` on the overlay\r\n       * component; however, we cannot do that here as\r\n       * that would prevent the element from being\r\n       * removed from the DOM.\r\n       */\n      this.gestureAnimationDismissing = true;\n      /**\r\n       * Reset the status bar style as the dismiss animation\r\n       * starts otherwise the status bar will be the wrong\r\n       * color for the duration of the dismiss animation.\r\n       * The dismiss method does this as well, but\r\n       * in this case it's only called once the animation\r\n       * has finished.\r\n       */\n      setCardStatusBarDefault(this.statusBarStyle);\n      this.animation.onFinish(async () => {\n        await this.dismiss(undefined, GESTURE);\n        this.gestureAnimationDismissing = false;\n      });\n    });\n    this.gesture.enable(true);\n  }\n  initSheetGesture() {\n    const {\n      wrapperEl,\n      initialBreakpoint,\n      backdropBreakpoint\n    } = this;\n    if (!wrapperEl || initialBreakpoint === undefined) {\n      return;\n    }\n    const animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\n    const ani = this.animation = animationBuilder(this.el, {\n      presentingEl: this.presentingElement,\n      currentBreakpoint: initialBreakpoint,\n      backdropBreakpoint\n    });\n    ani.progressStart(true, 1);\n    const {\n      gesture,\n      moveSheetToBreakpoint\n    } = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, () => {\n      var _a;\n      return (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : 0;\n    }, () => this.sheetOnDismiss(), breakpoint => {\n      if (this.currentBreakpoint !== breakpoint) {\n        this.currentBreakpoint = breakpoint;\n        this.ionBreakpointDidChange.emit({\n          breakpoint\n        });\n      }\n    });\n    this.gesture = gesture;\n    this.moveSheetToBreakpoint = moveSheetToBreakpoint;\n    this.gesture.enable(true);\n  }\n  sheetOnDismiss() {\n    /**\r\n     * While the gesture animation is finishing\r\n     * it is possible for a user to tap the backdrop.\r\n     * This would result in the dismiss animation\r\n     * being played again. Typically this is avoided\r\n     * by setting `presented = false` on the overlay\r\n     * component; however, we cannot do that here as\r\n     * that would prevent the element from being\r\n     * removed from the DOM.\r\n     */\n    this.gestureAnimationDismissing = true;\n    this.animation.onFinish(async () => {\n      this.currentBreakpoint = 0;\n      this.ionBreakpointDidChange.emit({\n        breakpoint: this.currentBreakpoint\n      });\n      await this.dismiss(undefined, GESTURE);\n      this.gestureAnimationDismissing = false;\n    });\n  }\n  /**\r\n   * Dismiss the modal overlay after it has been presented.\r\n   *\r\n   * @param data Any data to emit in the dismiss events.\r\n   * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\r\n   *\r\n   * This is a no-op if the overlay has not been presented yet. If you want\r\n   * to remove an overlay from the DOM that was never presented, use the\r\n   * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\r\n   */\n  async dismiss(data, role) {\n    var _a;\n    if (this.gestureAnimationDismissing && role !== GESTURE) {\n      return false;\n    }\n    /**\r\n     * Because the canDismiss check below is async,\r\n     * we need to claim a lock before the check happens,\r\n     * in case the dismiss transition does run.\r\n     */\n    const unlock = await this.lockController.lock();\n    /**\r\n     * If a canDismiss handler is responsible\r\n     * for calling the dismiss method, we should\r\n     * not run the canDismiss check again.\r\n     */\n    if (role !== 'handler' && !(await this.checkCanDismiss(data, role))) {\n      unlock();\n      return false;\n    }\n    const {\n      presentingElement\n    } = this;\n    /**\r\n     * We need to start the status bar change\r\n     * before the animation so that the change\r\n     * finishes when the dismiss animation does.\r\n     */\n    const hasCardModal = presentingElement !== undefined;\n    if (hasCardModal && getIonMode(this) === 'ios') {\n      setCardStatusBarDefault(this.statusBarStyle);\n    }\n    /* tslint:disable-next-line */\n    if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\n      window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n      this.keyboardOpenCallback = undefined;\n    }\n    const dismissed = await dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\n      presentingEl: presentingElement,\n      currentBreakpoint: (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : this.initialBreakpoint,\n      backdropBreakpoint: this.backdropBreakpoint\n    });\n    if (dismissed) {\n      const {\n        delegate\n      } = this.getDelegate();\n      await detachComponent(delegate, this.usersElement);\n      writeTask(() => this.el.classList.remove('show-modal'));\n      if (this.animation) {\n        this.animation.destroy();\n      }\n      if (this.gesture) {\n        this.gesture.destroy();\n      }\n    }\n    this.currentBreakpoint = undefined;\n    this.animation = undefined;\n    unlock();\n    return dismissed;\n  }\n  /**\r\n   * Returns a promise that resolves when the modal did dismiss.\r\n   */\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionModalDidDismiss');\n  }\n  /**\r\n   * Returns a promise that resolves when the modal will dismiss.\r\n   */\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionModalWillDismiss');\n  }\n  /**\r\n   * Move a sheet style modal to a specific breakpoint. The breakpoint value must\r\n   * be a value defined in your `breakpoints` array.\r\n   */\n  async setCurrentBreakpoint(breakpoint) {\n    if (!this.isSheetModal) {\n      printIonWarning('setCurrentBreakpoint is only supported on sheet modals.');\n      return;\n    }\n    if (!this.breakpoints.includes(breakpoint)) {\n      printIonWarning(`Attempted to set invalid breakpoint value ${breakpoint}. Please double check that the breakpoint value is part of your defined breakpoints.`);\n      return;\n    }\n    const {\n      currentBreakpoint,\n      moveSheetToBreakpoint,\n      canDismiss,\n      breakpoints,\n      animated\n    } = this;\n    if (currentBreakpoint === breakpoint) {\n      return;\n    }\n    if (moveSheetToBreakpoint) {\n      this.sheetTransition = moveSheetToBreakpoint({\n        breakpoint,\n        breakpointOffset: 1 - currentBreakpoint,\n        canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0,\n        animated\n      });\n      await this.sheetTransition;\n      this.sheetTransition = undefined;\n    }\n  }\n  /**\r\n   * Returns the current breakpoint of a sheet style modal\r\n   */\n  async getCurrentBreakpoint() {\n    return this.currentBreakpoint;\n  }\n  async moveToNextBreakpoint() {\n    const {\n      breakpoints,\n      currentBreakpoint\n    } = this;\n    if (!breakpoints || currentBreakpoint == null) {\n      /**\r\n       * If the modal does not have breakpoints and/or the current\r\n       * breakpoint is not set, we can't move to the next breakpoint.\r\n       */\n      return false;\n    }\n    const allowedBreakpoints = breakpoints.filter(b => b !== 0);\n    const currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);\n    const nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;\n    const nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];\n    /**\r\n     * Sets the current breakpoint to the next available breakpoint.\r\n     * If the current breakpoint is the last breakpoint, we set the current\r\n     * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.\r\n     */\n    await this.setCurrentBreakpoint(nextBreakpoint);\n    return true;\n  }\n  render() {\n    const {\n      handle,\n      isSheetModal,\n      presentingElement,\n      htmlAttributes,\n      handleBehavior,\n      inheritedAttributes\n    } = this;\n    const showHandle = handle !== false && isSheetModal;\n    const mode = getIonMode(this);\n    const isCardModal = presentingElement !== undefined && mode === 'ios';\n    const isHandleCycle = handleBehavior === 'cycle';\n    return h(Host, Object.assign({\n      key: '67ef0269a5e9b542d0c2acaa03a2f7f46b8cf0b5',\n      \"no-router\": true,\n      tabindex: \"-1\"\n    }, htmlAttributes, {\n      style: {\n        zIndex: `${20000 + this.overlayIndex}`\n      },\n      class: Object.assign({\n        [mode]: true,\n        ['modal-default']: !isCardModal && !isSheetModal,\n        [`modal-card`]: isCardModal,\n        [`modal-sheet`]: isSheetModal,\n        'overlay-hidden': true\n      }, getClassMap(this.cssClass)),\n      onIonBackdropTap: this.onBackdropTap,\n      onIonModalDidPresent: this.onLifecycle,\n      onIonModalWillPresent: this.onLifecycle,\n      onIonModalWillDismiss: this.onLifecycle,\n      onIonModalDidDismiss: this.onLifecycle\n    }), h(\"ion-backdrop\", {\n      key: 'edd98375e98d887dbea232adb81b74f164fa058b',\n      ref: el => this.backdropEl = el,\n      visible: this.showBackdrop,\n      tappable: this.backdropDismiss,\n      part: \"backdrop\"\n    }), mode === 'ios' && h(\"div\", {\n      class: \"modal-shadow\"\n    }), h(\"div\", Object.assign({\n      key: '40437670391544b57b8a9943ef3b49de7acbd873',\n      /*\r\n        role and aria-modal must be used on the\r\n        same element. They must also be set inside the\r\n        shadow DOM otherwise ion-button will not be highlighted\r\n        when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134\r\n      */\n      role: \"dialog\"\n    }, inheritedAttributes, {\n      \"aria-modal\": \"true\",\n      class: \"modal-wrapper ion-overlay-wrapper\",\n      part: \"content\",\n      ref: el => this.wrapperEl = el\n    }), showHandle && h(\"button\", {\n      class: \"modal-handle\",\n      // Prevents the handle from receiving keyboard focus when it does not cycle\n      tabIndex: !isHandleCycle ? -1 : 0,\n      \"aria-label\": \"Activate to adjust the size of the dialog overlaying the screen\",\n      onClick: isHandleCycle ? this.onHandleClick : undefined,\n      part: \"handle\"\n    }), h(\"slot\", {\n      key: 'dfe2095d9e1adb075dc09d1927ef24ea09ea5435'\n    })));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"isOpen\": [\"onIsOpenChange\"],\n      \"trigger\": [\"triggerChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: IonModalIosStyle0,\n      md: IonModalMdStyle0\n    };\n  }\n}, [33, \"ion-modal\", {\n  \"hasController\": [4, \"has-controller\"],\n  \"overlayIndex\": [2, \"overlay-index\"],\n  \"delegate\": [16],\n  \"keyboardClose\": [4, \"keyboard-close\"],\n  \"enterAnimation\": [16],\n  \"leaveAnimation\": [16],\n  \"breakpoints\": [16],\n  \"initialBreakpoint\": [2, \"initial-breakpoint\"],\n  \"backdropBreakpoint\": [2, \"backdrop-breakpoint\"],\n  \"handle\": [4],\n  \"handleBehavior\": [1, \"handle-behavior\"],\n  \"component\": [1],\n  \"componentProps\": [16],\n  \"cssClass\": [1, \"css-class\"],\n  \"backdropDismiss\": [4, \"backdrop-dismiss\"],\n  \"showBackdrop\": [4, \"show-backdrop\"],\n  \"animated\": [4],\n  \"presentingElement\": [16],\n  \"htmlAttributes\": [16],\n  \"isOpen\": [4, \"is-open\"],\n  \"trigger\": [1],\n  \"keepContentsMounted\": [4, \"keep-contents-mounted\"],\n  \"canDismiss\": [4, \"can-dismiss\"],\n  \"presented\": [32],\n  \"present\": [64],\n  \"dismiss\": [64],\n  \"onDidDismiss\": [64],\n  \"onWillDismiss\": [64],\n  \"setCurrentBreakpoint\": [64],\n  \"getCurrentBreakpoint\": [64]\n}, undefined, {\n  \"isOpen\": [\"onIsOpenChange\"],\n  \"trigger\": [\"triggerChanged\"]\n}]);\nconst LIFECYCLE_MAP = {\n  ionModalDidPresent: 'ionViewDidEnter',\n  ionModalWillPresent: 'ionViewWillEnter',\n  ionModalWillDismiss: 'ionViewWillLeave',\n  ionModalDidDismiss: 'ionViewDidLeave'\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-modal\", \"ion-backdrop\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-modal\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Modal);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonModal = Modal;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonModal, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","a","findClosestIonContent","i","isIonContent","d","disableContentScrollY","r","resetContentScrollY","f","findIonContent","p","printIonContentErrorMsg","C","CoreDelegate","attachComponent","detachComponent","g","getElementRoot","m","clamp","raf","inheritAttributes","l","hasLazyBuild","c","createLockController","printIonWarning","getCapacitor","G","GESTURE","O","OVERLAY_GESTURE_PRIORITY","e","createTriggerController","B","BACKDROP","j","prepareOverlay","k","setOverlayId","present","dismiss","eventMethod","getClassMap","deepReady","w","waitForMount","b","getIonMode","config","KEYBOARD_DID_OPEN","createAnimation","getTimeGivenProgression","createGesture","win","defineCustomElement$2","Style","StatusBar","getEngine","capacitor","isPluginAvailable","Plugins","undefined","supportsDefaultStatusBarStyle","PluginHeaders","setStyle","options","engine","getStyle","Default","style","getInfo","getBackdropValueForSheet","x","backdropBreakpoint","slope","setCardStatusBarDark","innerWidth","Dark","setCardStatusBarDefault","defaultStyle","handleCanDismiss","el","animation","canDismiss","shouldDismiss","isRunning","onFinish","oneTimeCallback","calculateSpringStep","t","SwipeToCloseDefaults","MIN_PRESENTING_SCALE","createSwipeToCloseGesture","statusBarStyle","onDismiss","DISMISS_THRESHOLD","height","offsetHeight","isOpen","canDismissBlocksGesture","contentEl","scrollEl","canDismissMaxStep","initialScrollY","lastStep","getScrollY","scrollY","canStart","detail","target","event","closest","root","querySelector","hasRefresherInContent","scrollTop","footer","onStart","deltaY","progressStart","onMove","step","isAttemptingDismissWithCanDismiss","maxStep","processedStep","clampedStep","progressStep","onEnd","velocity","velocityY","threshold","shouldComplete","newStepValue","easing","duration","computeDuration","gesture","enable","progressEnd","gestureName","gesturePriority","direction","remaining","Math","abs","createSheetEnterAnimation","opts","currentBreakpoint","shouldShowBackdrop","initialBackdrop","backdropAnimation","fromTo","beforeStyles","afterClearStyles","wrapperAnimation","keyframes","offset","opacity","transform","createSheetLeaveAnimation","backdropValue","defaultBackdrop","customBackdrop","createEnterAnimation$1","iosEnterAnimation","baseEl","presentingEl","addElement","querySelectorAll","baseAnimation","addAnimation","isMobile","window","hasCardModal","tagName","presentingElement","presentingElRoot","presentingAnimation","overflow","bodyEl","document","body","transformOffset","CSS","supports","modalTransform","toPresentingScale","finalTransform","afterStyles","beforeAddWrite","setProperty","filter","borderRadius","shadowAnimation","createLeaveAnimation$1","iosLeaveAnimation","beforeClearStyles","currentStep","numModals","Array","from","length","createEnterAnimation","mdEnterAnimation","createLeaveAnimation","mdLeaveAnimation","createSheetGesture","backdropEl","wrapperEl","initialBreakpoint","breakpoints","getCurrentBreakpoint","onBreakpointChange","SheetDefaults","WRAPPER_KEYFRAMES","BACKDROP_KEYFRAMES","clientHeight","childAnimations","find","ani","id","maxBreakpoint","minBreakpoint","enableBackdrop","classList","remove","disableBackdrop","add","shouldEnableBackdrop","content","focus","initialStep","secondToLastBreakpoint","diff","reduce","moveSheetToBreakpoint","breakpoint","breakpointOffset","animated","shouldPreventDismiss","snapToBreakpoint","shouldRemainOpen","Promise","resolve","modalIosCss","IonModalIosStyle0","modalMdCss","IonModalMdStyle0","Modal","constructor","__registerHost","__attachShadow","didPresent","willPresent","willDismiss","didDismiss","ionBreakpointDidChange","didPresentShorthand","willPresentShorthand","willDismissShorthand","didDismissShorthand","ionMount","lockController","triggerController","coreDelegate","isSheetModal","inheritedAttributes","inline","gestureAnimationDismissing","onHandleClick","sheetTransition","handleBehavior","moveToNextBreakpoint","onBackdropTap","onLifecycle","modalEvent","usersElement","name","LIFECYCLE_MAP","type","ev","CustomEvent","bubbles","cancelable","dispatchEvent","presented","hasController","overlayIndex","delegate","keyboardClose","enterAnimation","leaveAnimation","handle","component","componentProps","cssClass","backdropDismiss","showBackdrop","htmlAttributes","trigger","keepContentsMounted","onIsOpenChange","newValue","oldValue","triggerChanged","addClickListener","breakpointsChanged","sortedBreakpoints","sort","connectedCallback","disconnectedCallback","removeClickListener","componentWillLoad","attributesToInherit","forEach","attribute","attributeValue","Object","assign","includes","componentDidLoad","getDelegate","force","workingDelegate","parentEl","parentNode","checkCanDismiss","data","role","unlock","lock","emit","keyboardOpenCallback","addEventListener","initSheetGesture","initSwipeToClose","_a","animationBuilder","get","sheetOnDismiss","removeEventListener","dismissed","destroy","onDidDismiss","onWillDismiss","setCurrentBreakpoint","allowedBreakpoints","currentBreakpointIndex","indexOf","nextBreakpointIndex","nextBreakpoint","render","showHandle","mode","isCardModal","isHandleCycle","key","tabindex","zIndex","class","onIonBackdropTap","onIonModalDidPresent","onIonModalWillPresent","onIonModalWillDismiss","onIonModalDidDismiss","ref","visible","tappable","part","tabIndex","onClick","watchers","ios","md","ionModalDidPresent","ionModalWillPresent","ionModalWillDismiss","ionModalDidDismiss","defineCustomElement$1","customElements","components","define","IonModal","defineCustomElement"],"sources":["E:/Online-Voting-Portal/client/node_modules/@ionic/core/components/ion-modal.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\r\nimport { a as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, f as findIonContent, p as printIonContentErrorMsg } from './index8.js';\r\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate.js';\r\nimport { g as getElementRoot, m as clamp, r as raf, d as inheritAttributes, l as hasLazyBuild } from './helpers.js';\r\nimport { c as createLockController } from './lock-controller.js';\r\nimport { p as printIonWarning } from './index6.js';\r\nimport { g as getCapacitor } from './capacitor.js';\r\nimport { G as GESTURE, O as OVERLAY_GESTURE_PRIORITY, e as createTriggerController, B as BACKDROP, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod } from './overlays.js';\r\nimport { g as getClassMap } from './theme.js';\r\nimport { e as deepReady, w as waitForMount } from './index2.js';\r\nimport { b as getIonMode, c as config } from './ionic-global.js';\r\nimport { KEYBOARD_DID_OPEN } from './keyboard2.js';\r\nimport { c as createAnimation } from './animation.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\r\nimport { createGesture } from './index3.js';\r\nimport { w as win } from './index5.js';\r\nimport { d as defineCustomElement$2 } from './backdrop.js';\r\n\r\nvar Style;\r\n(function (Style) {\r\n    Style[\"Dark\"] = \"DARK\";\r\n    Style[\"Light\"] = \"LIGHT\";\r\n    Style[\"Default\"] = \"DEFAULT\";\r\n})(Style || (Style = {}));\r\nconst StatusBar = {\r\n    getEngine() {\r\n        const capacitor = getCapacitor();\r\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('StatusBar')) {\r\n            return capacitor.Plugins.StatusBar;\r\n        }\r\n        return undefined;\r\n    },\r\n    // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\r\n    supportsDefaultStatusBarStyle() {\r\n        const capacitor = getCapacitor();\r\n        /**\r\n         * The 'DEFAULT' status bar style was added\r\n         * to the @capacitor/status-bar plugin in Capacitor 3.\r\n         * PluginHeaders is only supported in Capacitor 3+,\r\n         * so we can use this to detect Capacitor 3.\r\n         */\r\n        return !!(capacitor === null || capacitor === void 0 ? void 0 : capacitor.PluginHeaders);\r\n    },\r\n    setStyle(options) {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        engine.setStyle(options);\r\n    },\r\n    getStyle: async function () {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return Style.Default;\r\n        }\r\n        const { style } = await engine.getInfo();\r\n        return style;\r\n    },\r\n};\r\n\r\n/**\r\n * Use y = mx + b to\r\n * figure out the backdrop value\r\n * at a particular x coordinate. This\r\n * is useful when the backdrop does\r\n * not begin to fade in until after\r\n * the 0 breakpoint.\r\n */\r\nconst getBackdropValueForSheet = (x, backdropBreakpoint) => {\r\n    /**\r\n     * We will use these points:\r\n     * (backdropBreakpoint, 0)\r\n     * (maxBreakpoint, 1)\r\n     * We know that at the beginning breakpoint,\r\n     * the backdrop will be hidden. We also\r\n     * know that at the maxBreakpoint, the backdrop\r\n     * must be fully visible. maxBreakpoint should\r\n     * always be 1 even if the maximum value\r\n     * of the breakpoints array is not 1 since\r\n     * the animation runs from a progress of 0\r\n     * to a progress of 1.\r\n     * m = (y2 - y1) / (x2 - x1)\r\n     *\r\n     * This is simplified from:\r\n     * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\r\n     *\r\n     * If the backdropBreakpoint is 1, we return 0 as the\r\n     * backdrop is completely hidden.\r\n     *\r\n     */\r\n    if (backdropBreakpoint === 1) {\r\n        return 0;\r\n    }\r\n    const slope = 1 / (1 - backdropBreakpoint);\r\n    /**\r\n     * From here, compute b which is\r\n     * the backdrop opacity if the offset\r\n     * is 0. If the backdrop does not\r\n     * begin to fade in until after the\r\n     * 0 breakpoint, this b value will be\r\n     * negative. This is fine as we never pass\r\n     * b directly into the animation keyframes.\r\n     * b = y - mx\r\n     * Use a known point: (backdropBreakpoint, 0)\r\n     * This is simplified from:\r\n     * b = 0 - (backdropBreakpoint * slope)\r\n     */\r\n    const b = -(backdropBreakpoint * slope);\r\n    /**\r\n     * Finally, we can now determine the\r\n     * backdrop offset given an arbitrary\r\n     * gesture offset.\r\n     */\r\n    return x * slope + b;\r\n};\r\n/**\r\n * The tablet/desktop card modal activates\r\n * when the window width is >= 768.\r\n * At that point, the presenting element\r\n * is not transformed, so we do not need to\r\n * adjust the status bar color.\r\n *\r\n * Note: We check supportsDefaultStatusBarStyle so that\r\n * Capacitor <= 2 users do not get their status bar\r\n * stuck in an inconsistent state due to a lack of\r\n * support for Style.Default.\r\n */\r\nconst setCardStatusBarDark = () => {\r\n    // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\r\n    if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\r\n        return;\r\n    }\r\n    StatusBar.setStyle({ style: Style.Dark });\r\n};\r\nconst setCardStatusBarDefault = (defaultStyle = Style.Default) => {\r\n    // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\r\n    if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\r\n        return;\r\n    }\r\n    StatusBar.setStyle({ style: defaultStyle });\r\n};\r\n\r\nconst handleCanDismiss = async (el, animation) => {\r\n    /**\r\n     * If canDismiss is not a function\r\n     * then we can return early. If canDismiss is `true`,\r\n     * then canDismissBlocksGesture is `false` as canDismiss\r\n     * will never interrupt the gesture. As a result,\r\n     * this code block is never reached. If canDismiss is `false`,\r\n     * then we never dismiss.\r\n     */\r\n    if (typeof el.canDismiss !== 'function') {\r\n        return;\r\n    }\r\n    /**\r\n     * Run the canDismiss callback.\r\n     * If the function returns `true`,\r\n     * then we can proceed with dismiss.\r\n     */\r\n    const shouldDismiss = await el.canDismiss(undefined, GESTURE);\r\n    if (!shouldDismiss) {\r\n        return;\r\n    }\r\n    /**\r\n     * If canDismiss resolved after the snap\r\n     * back animation finished, we can\r\n     * dismiss immediately.\r\n     *\r\n     * If canDismiss resolved before the snap\r\n     * back animation finished, we need to\r\n     * wait until the snap back animation is\r\n     * done before dismissing.\r\n     */\r\n    if (animation.isRunning()) {\r\n        animation.onFinish(() => {\r\n            el.dismiss(undefined, 'handler');\r\n        }, { oneTimeCallback: true });\r\n    }\r\n    else {\r\n        el.dismiss(undefined, 'handler');\r\n    }\r\n};\r\n/**\r\n * This function lets us simulate a realistic spring-like animation\r\n * when swiping down on the modal.\r\n * There are two forces that we need to use to compute the spring physics:\r\n *\r\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\r\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\r\n *\r\n * Using these two values, we can calculate the Spring Force and the Dampening Force\r\n * to compute the total force applied to a spring.\r\n *\r\n * Spring Force: This force pulls a spring back into its equilibrium position.\r\n * Hooke's Law tells us that that spring force (FS) = kX.\r\n * k is the stiffness of a spring, and X is the displacement of the spring from its\r\n * equilibrium position. In this case, it is the amount by which the free end\r\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\r\n *\r\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\r\n * The dampening force, FD, can be found via this formula: FD = -cv\r\n * where c the dampening value and v is velocity.\r\n *\r\n * Therefore, the resulting force that is exerted on the block is:\r\n * F = FS + FD = -kX - cv\r\n *\r\n * Newton's 2nd Law tells us that F = ma:\r\n * ma = -kX - cv.\r\n *\r\n * For Ionic's purposes, we can assume that m = 1:\r\n * a = -kX - cv\r\n *\r\n * Imagine a block attached to the end of a spring. At equilibrium\r\n * the block is at position x = 1.\r\n * Pressing on the block moves it to position x = 0;\r\n * So, to calculate the displacement, we need to take the\r\n * current position and subtract the previous position from it.\r\n * X = x - x0 = 0 - 1 = -1.\r\n *\r\n * For Ionic's purposes, we are only pushing on the spring modal\r\n * so we have a max position of 1.\r\n * As a result, we can expand displacement to this formula:\r\n * X = x - 1\r\n *\r\n * a = -k(x - 1) - cv\r\n *\r\n * We can represent the motion of something as a function of time: f(t) = x.\r\n * The derivative of position gives us the velocity: f'(t)\r\n * The derivative of the velocity gives us the acceleration: f''(t)\r\n *\r\n * We can substitute the formula above with these values:\r\n *\r\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\r\n *\r\n * This is called a differential equation.\r\n *\r\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\r\n * This means our velocity is also zero: f'(0) = 0.\r\n *\r\n * We can cheat a bit and plug the formula into Wolfram Alpha.\r\n * However, we need to pick stiffness and dampening values:\r\n * k = 0.57\r\n * c = 15\r\n *\r\n * I picked these as they are fairly close to native iOS's spring effect\r\n * with the modal.\r\n *\r\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\r\n *\r\n * The result is a formula that lets us calculate the acceleration\r\n * for a given time t.\r\n * Note: This is the approximate form of the solution. Wolfram Alpha will\r\n * give you a complex differential equation too.\r\n */\r\nconst calculateSpringStep = (t) => {\r\n    return 0.00255275 * 2.71828 ** (-14.9619 * t) - 1.00255 * 2.71828 ** (-0.0380968 * t) + 1;\r\n};\r\n\r\n// Defaults for the card swipe animation\r\nconst SwipeToCloseDefaults = {\r\n    MIN_PRESENTING_SCALE: 0.93,\r\n};\r\nconst createSwipeToCloseGesture = (el, animation, statusBarStyle, onDismiss) => {\r\n    /**\r\n     * The step value at which a card modal\r\n     * is eligible for dismissing via gesture.\r\n     */\r\n    const DISMISS_THRESHOLD = 0.5;\r\n    const height = el.offsetHeight;\r\n    let isOpen = false;\r\n    let canDismissBlocksGesture = false;\r\n    let contentEl = null;\r\n    let scrollEl = null;\r\n    const canDismissMaxStep = 0.2;\r\n    let initialScrollY = true;\r\n    let lastStep = 0;\r\n    const getScrollY = () => {\r\n        if (contentEl && isIonContent(contentEl)) {\r\n            return contentEl.scrollY;\r\n            /**\r\n             * Custom scroll containers are intended to be\r\n             * used with virtual scrolling, so we assume\r\n             * there is scrolling in this case.\r\n             */\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    const canStart = (detail) => {\r\n        const target = detail.event.target;\r\n        if (target === null || !target.closest) {\r\n            return true;\r\n        }\r\n        /**\r\n         * If we are swiping on the content,\r\n         * swiping should only be possible if\r\n         * the content is scrolled all the way\r\n         * to the top so that we do not interfere\r\n         * with scrolling.\r\n         *\r\n         * We cannot assume that the `ion-content`\r\n         * target will remain consistent between\r\n         * swipes. For example, when using\r\n         * ion-nav within a card modal it is\r\n         * possible to swipe, push a view, and then\r\n         * swipe again. The target content will not\r\n         * be the same between swipes.\r\n         */\r\n        contentEl = findClosestIonContent(target);\r\n        if (contentEl) {\r\n            /**\r\n             * The card should never swipe to close\r\n             * on the content with a refresher.\r\n             * Note: We cannot solve this by making the\r\n             * swipeToClose gesture have a higher priority\r\n             * than the refresher gesture as the iOS native\r\n             * refresh gesture uses a scroll listener in\r\n             * addition to a gesture.\r\n             *\r\n             * Note: Do not use getScrollElement here\r\n             * because we need this to be a synchronous\r\n             * operation, and getScrollElement is\r\n             * asynchronous.\r\n             */\r\n            if (isIonContent(contentEl)) {\r\n                const root = getElementRoot(contentEl);\r\n                scrollEl = root.querySelector('.inner-scroll');\r\n            }\r\n            else {\r\n                scrollEl = contentEl;\r\n            }\r\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\r\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\r\n        }\r\n        /**\r\n         * Card should be swipeable on all\r\n         * parts of the modal except for the footer.\r\n         */\r\n        const footer = target.closest('ion-footer');\r\n        if (footer === null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    const onStart = (detail) => {\r\n        const { deltaY } = detail;\r\n        /**\r\n         * Get the initial scrollY value so\r\n         * that we can correctly reset the scrollY\r\n         * prop when the gesture ends.\r\n         */\r\n        initialScrollY = getScrollY();\r\n        /**\r\n         * If canDismiss is anything other than `true`\r\n         * then users should be able to swipe down\r\n         * until a threshold is hit. At that point,\r\n         * the card modal should not proceed any further.\r\n         * TODO (FW-937)\r\n         * Remove undefined check\r\n         */\r\n        canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\r\n        /**\r\n         * If we are pulling down, then\r\n         * it is possible we are pulling on the\r\n         * content. We do not want scrolling to\r\n         * happen at the same time as the gesture.\r\n         */\r\n        if (deltaY > 0 && contentEl) {\r\n            disableContentScrollY(contentEl);\r\n        }\r\n        animation.progressStart(true, isOpen ? 1 : 0);\r\n    };\r\n    const onMove = (detail) => {\r\n        const { deltaY } = detail;\r\n        /**\r\n         * If we are pulling down, then\r\n         * it is possible we are pulling on the\r\n         * content. We do not want scrolling to\r\n         * happen at the same time as the gesture.\r\n         */\r\n        if (deltaY > 0 && contentEl) {\r\n            disableContentScrollY(contentEl);\r\n        }\r\n        /**\r\n         * If we are swiping on the content\r\n         * then the swipe gesture should only\r\n         * happen if we are pulling down.\r\n         *\r\n         * However, if we pull up and\r\n         * then down such that the scroll position\r\n         * returns to 0, we should be able to swipe\r\n         * the card.\r\n         */\r\n        const step = detail.deltaY / height;\r\n        /**\r\n         * Check if user is swiping down and\r\n         * if we have a canDismiss value that\r\n         * should block the gesture from\r\n         * proceeding,\r\n         */\r\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\r\n        /**\r\n         * If we are blocking the gesture from dismissing,\r\n         * set the max step value so that the sheet cannot be\r\n         * completely hidden.\r\n         */\r\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\r\n        /**\r\n         * If we are blocking the gesture from\r\n         * dismissing, calculate the spring modifier value\r\n         * this will be added to the starting breakpoint\r\n         * value to give the gesture a spring-like feeling.\r\n         * Note that the starting breakpoint is always 0,\r\n         * so we omit adding 0 to the result.\r\n         */\r\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\r\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\r\n        animation.progressStep(clampedStep);\r\n        /**\r\n         * When swiping down half way, the status bar style\r\n         * should be reset to its default value.\r\n         *\r\n         * We track lastStep so that we do not fire these\r\n         * functions on every onMove, only when the user has\r\n         * crossed a certain threshold.\r\n         */\r\n        if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\r\n            setCardStatusBarDefault(statusBarStyle);\r\n            /**\r\n             * However, if we swipe back up, then the\r\n             * status bar style should be set to have light\r\n             * text on a dark background.\r\n             */\r\n        }\r\n        else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\r\n            setCardStatusBarDark();\r\n        }\r\n        lastStep = clampedStep;\r\n    };\r\n    const onEnd = (detail) => {\r\n        const velocity = detail.velocityY;\r\n        const step = detail.deltaY / height;\r\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\r\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\r\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\r\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\r\n        const threshold = (detail.deltaY + velocity * 1000) / height;\r\n        /**\r\n         * If canDismiss blocks\r\n         * the swipe gesture, then the\r\n         * animation can never complete until\r\n         * canDismiss is checked.\r\n         */\r\n        const shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\r\n        let newStepValue = shouldComplete ? -0.001 : 0.001;\r\n        if (!shouldComplete) {\r\n            animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\r\n            newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\r\n        }\r\n        else {\r\n            animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\r\n            newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\r\n        }\r\n        const duration = shouldComplete\r\n            ? computeDuration(step * height, velocity)\r\n            : computeDuration((1 - clampedStep) * height, velocity);\r\n        isOpen = shouldComplete;\r\n        gesture.enable(false);\r\n        if (contentEl) {\r\n            resetContentScrollY(contentEl, initialScrollY);\r\n        }\r\n        animation\r\n            .onFinish(() => {\r\n            if (!shouldComplete) {\r\n                gesture.enable(true);\r\n            }\r\n        })\r\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\r\n        /**\r\n         * If the canDismiss value blocked the gesture\r\n         * from proceeding, then we should ignore whatever\r\n         * shouldComplete is. Whether or not the modal\r\n         * animation should complete is now determined by\r\n         * canDismiss.\r\n         *\r\n         * If the user swiped >25% of the way\r\n         * to the max step, then we should\r\n         * check canDismiss. 25% was chosen\r\n         * to avoid accidental swipes.\r\n         */\r\n        if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {\r\n            handleCanDismiss(el, animation);\r\n        }\r\n        else if (shouldComplete) {\r\n            onDismiss();\r\n        }\r\n    };\r\n    const gesture = createGesture({\r\n        el,\r\n        gestureName: 'modalSwipeToClose',\r\n        gesturePriority: OVERLAY_GESTURE_PRIORITY,\r\n        direction: 'y',\r\n        threshold: 10,\r\n        canStart,\r\n        onStart,\r\n        onMove,\r\n        onEnd,\r\n    });\r\n    return gesture;\r\n};\r\nconst computeDuration = (remaining, velocity) => {\r\n    return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\r\n};\r\n\r\nconst createSheetEnterAnimation = (opts) => {\r\n    const { currentBreakpoint, backdropBreakpoint } = opts;\r\n    /**\r\n     * If the backdropBreakpoint is undefined, then the backdrop\r\n     * should always fade in. If the backdropBreakpoint came before the\r\n     * current breakpoint, then the backdrop should be fading in.\r\n     */\r\n    const shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\r\n    const initialBackdrop = shouldShowBackdrop ? `calc(var(--backdrop-opacity) * ${currentBreakpoint})` : '0';\r\n    const backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\r\n    if (shouldShowBackdrop) {\r\n        backdropAnimation\r\n            .beforeStyles({\r\n            'pointer-events': 'none',\r\n        })\r\n            .afterClearStyles(['pointer-events']);\r\n    }\r\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\r\n        { offset: 0, opacity: 1, transform: 'translateY(100%)' },\r\n        { offset: 1, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\r\n    ]);\r\n    return { wrapperAnimation, backdropAnimation };\r\n};\r\nconst createSheetLeaveAnimation = (opts) => {\r\n    const { currentBreakpoint, backdropBreakpoint } = opts;\r\n    /**\r\n     * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\r\n     * is defined, so we need to account for that offset by figuring out\r\n     * what the current backdrop value should be.\r\n     */\r\n    const backdropValue = `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint)})`;\r\n    const defaultBackdrop = [\r\n        { offset: 0, opacity: backdropValue },\r\n        { offset: 1, opacity: 0 },\r\n    ];\r\n    const customBackdrop = [\r\n        { offset: 0, opacity: backdropValue },\r\n        { offset: backdropBreakpoint, opacity: 0 },\r\n        { offset: 1, opacity: 0 },\r\n    ];\r\n    const backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\r\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\r\n        { offset: 0, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\r\n        { offset: 1, opacity: 1, transform: `translateY(100%)` },\r\n    ]);\r\n    return { wrapperAnimation, backdropAnimation };\r\n};\r\n\r\nconst createEnterAnimation$1 = () => {\r\n    const backdropAnimation = createAnimation()\r\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\r\n        .beforeStyles({\r\n        'pointer-events': 'none',\r\n    })\r\n        .afterClearStyles(['pointer-events']);\r\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\r\n    return { backdropAnimation, wrapperAnimation };\r\n};\r\n/**\r\n * iOS Modal Enter Animation for the Card presentation style\r\n */\r\nconst iosEnterAnimation = (baseEl, opts) => {\r\n    const { presentingEl, currentBreakpoint } = opts;\r\n    const root = getElementRoot(baseEl);\r\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1();\r\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\r\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\r\n    const baseAnimation = createAnimation('entering-base')\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.32,0.72,0,1)')\r\n        .duration(500)\r\n        .addAnimation(wrapperAnimation);\r\n    if (presentingEl) {\r\n        const isMobile = window.innerWidth < 768;\r\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\r\n        const presentingElRoot = getElementRoot(presentingEl);\r\n        const presentingAnimation = createAnimation().beforeStyles({\r\n            transform: 'translateY(0)',\r\n            'transform-origin': 'top center',\r\n            overflow: 'hidden',\r\n        });\r\n        const bodyEl = document.body;\r\n        if (isMobile) {\r\n            /**\r\n             * Fallback for browsers that does not support `max()` (ex: Firefox)\r\n             * No need to worry about statusbar padding since engines like Gecko\r\n             * are not used as the engine for standalone Cordova/Capacitor apps\r\n             */\r\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\r\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\r\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\r\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\r\n            presentingAnimation\r\n                .afterStyles({\r\n                transform: finalTransform,\r\n            })\r\n                .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\r\n                .addElement(presentingEl)\r\n                .keyframes([\r\n                { offset: 0, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\r\n                { offset: 1, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\r\n            ]);\r\n            baseAnimation.addAnimation(presentingAnimation);\r\n        }\r\n        else {\r\n            baseAnimation.addAnimation(backdropAnimation);\r\n            if (!hasCardModal) {\r\n                wrapperAnimation.fromTo('opacity', '0', '1');\r\n            }\r\n            else {\r\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\r\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\r\n                presentingAnimation\r\n                    .afterStyles({\r\n                    transform: finalTransform,\r\n                })\r\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\r\n                    .keyframes([\r\n                    { offset: 0, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\r\n                    { offset: 1, filter: 'contrast(0.85)', transform: finalTransform },\r\n                ]);\r\n                const shadowAnimation = createAnimation()\r\n                    .afterStyles({\r\n                    transform: finalTransform,\r\n                })\r\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\r\n                    .keyframes([\r\n                    { offset: 0, opacity: '1', transform: 'translateY(0) scale(1)' },\r\n                    { offset: 1, opacity: '0', transform: finalTransform },\r\n                ]);\r\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        baseAnimation.addAnimation(backdropAnimation);\r\n    }\r\n    return baseAnimation;\r\n};\r\n\r\nconst createLeaveAnimation$1 = () => {\r\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\r\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\r\n    return { backdropAnimation, wrapperAnimation };\r\n};\r\n/**\r\n * iOS Modal Leave Animation\r\n */\r\nconst iosLeaveAnimation = (baseEl, opts, duration = 500) => {\r\n    const { presentingEl, currentBreakpoint } = opts;\r\n    const root = getElementRoot(baseEl);\r\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1();\r\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\r\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\r\n    const baseAnimation = createAnimation('leaving-base')\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.32,0.72,0,1)')\r\n        .duration(duration)\r\n        .addAnimation(wrapperAnimation);\r\n    if (presentingEl) {\r\n        const isMobile = window.innerWidth < 768;\r\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\r\n        const presentingElRoot = getElementRoot(presentingEl);\r\n        const presentingAnimation = createAnimation()\r\n            .beforeClearStyles(['transform'])\r\n            .afterClearStyles(['transform'])\r\n            .onFinish((currentStep) => {\r\n            // only reset background color if this is the last card-style modal\r\n            if (currentStep !== 1) {\r\n                return;\r\n            }\r\n            presentingEl.style.setProperty('overflow', '');\r\n            const numModals = Array.from(bodyEl.querySelectorAll('ion-modal:not(.overlay-hidden)')).filter((m) => m.presentingElement !== undefined).length;\r\n            if (numModals <= 1) {\r\n                bodyEl.style.setProperty('background-color', '');\r\n            }\r\n        });\r\n        const bodyEl = document.body;\r\n        if (isMobile) {\r\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\r\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\r\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\r\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\r\n            presentingAnimation.addElement(presentingEl).keyframes([\r\n                { offset: 0, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\r\n                { offset: 1, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\r\n            ]);\r\n            baseAnimation.addAnimation(presentingAnimation);\r\n        }\r\n        else {\r\n            baseAnimation.addAnimation(backdropAnimation);\r\n            if (!hasCardModal) {\r\n                wrapperAnimation.fromTo('opacity', '1', '0');\r\n            }\r\n            else {\r\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\r\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\r\n                presentingAnimation\r\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\r\n                    .afterStyles({\r\n                    transform: 'translate3d(0, 0, 0)',\r\n                })\r\n                    .keyframes([\r\n                    { offset: 0, filter: 'contrast(0.85)', transform: finalTransform },\r\n                    { offset: 1, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\r\n                ]);\r\n                const shadowAnimation = createAnimation()\r\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\r\n                    .afterStyles({\r\n                    transform: 'translateY(0) scale(1)',\r\n                })\r\n                    .keyframes([\r\n                    { offset: 0, opacity: '0', transform: finalTransform },\r\n                    { offset: 1, opacity: '1', transform: 'translateY(0) scale(1)' },\r\n                ]);\r\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        baseAnimation.addAnimation(backdropAnimation);\r\n    }\r\n    return baseAnimation;\r\n};\r\n\r\nconst createEnterAnimation = () => {\r\n    const backdropAnimation = createAnimation()\r\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\r\n        .beforeStyles({\r\n        'pointer-events': 'none',\r\n    })\r\n        .afterClearStyles(['pointer-events']);\r\n    const wrapperAnimation = createAnimation().keyframes([\r\n        { offset: 0, opacity: 0.01, transform: 'translateY(40px)' },\r\n        { offset: 1, opacity: 1, transform: `translateY(0px)` },\r\n    ]);\r\n    return { backdropAnimation, wrapperAnimation };\r\n};\r\n/**\r\n * Md Modal Enter Animation\r\n */\r\nconst mdEnterAnimation = (baseEl, opts) => {\r\n    const { currentBreakpoint } = opts;\r\n    const root = getElementRoot(baseEl);\r\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation();\r\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\r\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\r\n    return createAnimation()\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\r\n        .duration(280)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\nconst createLeaveAnimation = () => {\r\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\r\n    const wrapperAnimation = createAnimation().keyframes([\r\n        { offset: 0, opacity: 0.99, transform: `translateY(0px)` },\r\n        { offset: 1, opacity: 0, transform: 'translateY(40px)' },\r\n    ]);\r\n    return { backdropAnimation, wrapperAnimation };\r\n};\r\n/**\r\n * Md Modal Leave Animation\r\n */\r\nconst mdLeaveAnimation = (baseEl, opts) => {\r\n    const { currentBreakpoint } = opts;\r\n    const root = getElementRoot(baseEl);\r\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation();\r\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\r\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\r\n    return createAnimation()\r\n        .easing('cubic-bezier(0.47,0,0.745,0.715)')\r\n        .duration(200)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\nconst createSheetGesture = (baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation, breakpoints = [], getCurrentBreakpoint, onDismiss, onBreakpointChange) => {\r\n    // Defaults for the sheet swipe animation\r\n    const defaultBackdrop = [\r\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\r\n        { offset: 1, opacity: 0.01 },\r\n    ];\r\n    const customBackdrop = [\r\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\r\n        { offset: 1 - backdropBreakpoint, opacity: 0 },\r\n        { offset: 1, opacity: 0 },\r\n    ];\r\n    const SheetDefaults = {\r\n        WRAPPER_KEYFRAMES: [\r\n            { offset: 0, transform: 'translateY(0%)' },\r\n            { offset: 1, transform: 'translateY(100%)' },\r\n        ],\r\n        BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop,\r\n    };\r\n    const contentEl = baseEl.querySelector('ion-content');\r\n    const height = wrapperEl.clientHeight;\r\n    let currentBreakpoint = initialBreakpoint;\r\n    let offset = 0;\r\n    let canDismissBlocksGesture = false;\r\n    const canDismissMaxStep = 0.95;\r\n    const wrapperAnimation = animation.childAnimations.find((ani) => ani.id === 'wrapperAnimation');\r\n    const backdropAnimation = animation.childAnimations.find((ani) => ani.id === 'backdropAnimation');\r\n    const maxBreakpoint = breakpoints[breakpoints.length - 1];\r\n    const minBreakpoint = breakpoints[0];\r\n    const enableBackdrop = () => {\r\n        baseEl.style.setProperty('pointer-events', 'auto');\r\n        backdropEl.style.setProperty('pointer-events', 'auto');\r\n        /**\r\n         * When the backdrop is enabled, elements such\r\n         * as inputs should not be focusable outside\r\n         * the sheet.\r\n         */\r\n        baseEl.classList.remove('ion-disable-focus-trap');\r\n    };\r\n    const disableBackdrop = () => {\r\n        baseEl.style.setProperty('pointer-events', 'none');\r\n        backdropEl.style.setProperty('pointer-events', 'none');\r\n        /**\r\n         * When the backdrop is enabled, elements such\r\n         * as inputs should not be focusable outside\r\n         * the sheet.\r\n         * Adding this class disables focus trapping\r\n         * for the sheet temporarily.\r\n         */\r\n        baseEl.classList.add('ion-disable-focus-trap');\r\n    };\r\n    /**\r\n     * After the entering animation completes,\r\n     * we need to set the animation to go from\r\n     * offset 0 to offset 1 so that users can\r\n     * swipe in any direction. We then set the\r\n     * animation offset to the current breakpoint\r\n     * so there is no flickering.\r\n     */\r\n    if (wrapperAnimation && backdropAnimation) {\r\n        wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\r\n        backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\r\n        animation.progressStart(true, 1 - currentBreakpoint);\r\n        /**\r\n         * If backdrop is not enabled, then content\r\n         * behind modal should be clickable. To do this, we need\r\n         * to remove pointer-events from ion-modal as a whole.\r\n         * ion-backdrop and .modal-wrapper always have pointer-events: auto\r\n         * applied, so the modal content can still be interacted with.\r\n         */\r\n        const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\r\n        if (shouldEnableBackdrop) {\r\n            enableBackdrop();\r\n        }\r\n        else {\r\n            disableBackdrop();\r\n        }\r\n    }\r\n    if (contentEl && currentBreakpoint !== maxBreakpoint) {\r\n        contentEl.scrollY = false;\r\n    }\r\n    const canStart = (detail) => {\r\n        /**\r\n         * If the sheet is fully expanded and\r\n         * the user is swiping on the content,\r\n         * the gesture should not start to\r\n         * allow for scrolling on the content.\r\n         */\r\n        const content = detail.event.target.closest('ion-content');\r\n        currentBreakpoint = getCurrentBreakpoint();\r\n        if (currentBreakpoint === 1 && content) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    const onStart = () => {\r\n        /**\r\n         * If canDismiss is anything other than `true`\r\n         * then users should be able to swipe down\r\n         * until a threshold is hit. At that point,\r\n         * the card modal should not proceed any further.\r\n         *\r\n         * canDismiss is never fired via gesture if there is\r\n         * no 0 breakpoint. However, it can be fired if the user\r\n         * presses Esc or the hardware back button.\r\n         * TODO (FW-937)\r\n         * Remove undefined check\r\n         */\r\n        canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\r\n        /**\r\n         * If swiping on the content\r\n         * we should disable scrolling otherwise\r\n         * the sheet will expand and the content will scroll.\r\n         */\r\n        if (contentEl) {\r\n            contentEl.scrollY = false;\r\n        }\r\n        raf(() => {\r\n            /**\r\n             * Dismisses the open keyboard when the sheet drag gesture is started.\r\n             * Sets the focus onto the modal element.\r\n             */\r\n            baseEl.focus();\r\n        });\r\n        animation.progressStart(true, 1 - currentBreakpoint);\r\n    };\r\n    const onMove = (detail) => {\r\n        /**\r\n         * Given the change in gesture position on the Y axis,\r\n         * compute where the offset of the animation should be\r\n         * relative to where the user dragged.\r\n         */\r\n        const initialStep = 1 - currentBreakpoint;\r\n        const secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\r\n        const step = initialStep + detail.deltaY / height;\r\n        const isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\r\n        /**\r\n         * If we are blocking the gesture from dismissing,\r\n         * set the max step value so that the sheet cannot be\r\n         * completely hidden.\r\n         */\r\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\r\n        /**\r\n         * If we are blocking the gesture from\r\n         * dismissing, calculate the spring modifier value\r\n         * this will be added to the starting breakpoint\r\n         * value to give the gesture a spring-like feeling.\r\n         * Note that when isAttemptingDismissWithCanDismiss is true,\r\n         * the modifier is always added to the breakpoint that\r\n         * appears right after the 0 breakpoint.\r\n         *\r\n         * Note that this modifier is essentially the progression\r\n         * between secondToLastBreakpoint and maxStep which is\r\n         * why we subtract secondToLastBreakpoint. This lets us get\r\n         * the result as a value from 0 to 1.\r\n         */\r\n        const processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined\r\n            ? secondToLastBreakpoint +\r\n                calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint))\r\n            : step;\r\n        offset = clamp(0.0001, processedStep, maxStep);\r\n        animation.progressStep(offset);\r\n    };\r\n    const onEnd = (detail) => {\r\n        /**\r\n         * When the gesture releases, we need to determine\r\n         * the closest breakpoint to snap to.\r\n         */\r\n        const velocity = detail.velocityY;\r\n        const threshold = (detail.deltaY + velocity * 350) / height;\r\n        const diff = currentBreakpoint - threshold;\r\n        const closest = breakpoints.reduce((a, b) => {\r\n            return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\r\n        });\r\n        moveSheetToBreakpoint({\r\n            breakpoint: closest,\r\n            breakpointOffset: offset,\r\n            canDismiss: canDismissBlocksGesture,\r\n            /**\r\n             * The swipe is user-driven, so we should\r\n             * always animate when the gesture ends.\r\n             */\r\n            animated: true,\r\n        });\r\n    };\r\n    const moveSheetToBreakpoint = (options) => {\r\n        const { breakpoint, canDismiss, breakpointOffset, animated } = options;\r\n        /**\r\n         * canDismiss should only prevent snapping\r\n         * when users are trying to dismiss. If canDismiss\r\n         * is present but the user is trying to swipe upwards,\r\n         * we should allow that to happen,\r\n         */\r\n        const shouldPreventDismiss = canDismiss && breakpoint === 0;\r\n        const snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\r\n        const shouldRemainOpen = snapToBreakpoint !== 0;\r\n        currentBreakpoint = 0;\r\n        /**\r\n         * Update the animation so that it plays from\r\n         * the last offset to the closest snap point.\r\n         */\r\n        if (wrapperAnimation && backdropAnimation) {\r\n            wrapperAnimation.keyframes([\r\n                { offset: 0, transform: `translateY(${breakpointOffset * 100}%)` },\r\n                { offset: 1, transform: `translateY(${(1 - snapToBreakpoint) * 100}%)` },\r\n            ]);\r\n            backdropAnimation.keyframes([\r\n                {\r\n                    offset: 0,\r\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint)})`,\r\n                },\r\n                {\r\n                    offset: 1,\r\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint)})`,\r\n                },\r\n            ]);\r\n            animation.progressStep(0);\r\n        }\r\n        /**\r\n         * Gesture should remain disabled until the\r\n         * snapping animation completes.\r\n         */\r\n        gesture.enable(false);\r\n        if (shouldPreventDismiss) {\r\n            handleCanDismiss(baseEl, animation);\r\n        }\r\n        else if (!shouldRemainOpen) {\r\n            onDismiss();\r\n        }\r\n        return new Promise((resolve) => {\r\n            animation\r\n                .onFinish(() => {\r\n                if (shouldRemainOpen) {\r\n                    /**\r\n                     * Once the snapping animation completes,\r\n                     * we need to reset the animation to go\r\n                     * from 0 to 1 so users can swipe in any direction.\r\n                     * We then set the animation offset to the current\r\n                     * breakpoint so that it starts at the snapped position.\r\n                     */\r\n                    if (wrapperAnimation && backdropAnimation) {\r\n                        raf(() => {\r\n                            wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\r\n                            backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\r\n                            animation.progressStart(true, 1 - snapToBreakpoint);\r\n                            currentBreakpoint = snapToBreakpoint;\r\n                            onBreakpointChange(currentBreakpoint);\r\n                            /**\r\n                             * If the sheet is fully expanded, we can safely\r\n                             * enable scrolling again.\r\n                             */\r\n                            if (contentEl && currentBreakpoint === breakpoints[breakpoints.length - 1]) {\r\n                                contentEl.scrollY = true;\r\n                            }\r\n                            /**\r\n                             * Backdrop should become enabled\r\n                             * after the backdropBreakpoint value\r\n                             */\r\n                            const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\r\n                            if (shouldEnableBackdrop) {\r\n                                enableBackdrop();\r\n                            }\r\n                            else {\r\n                                disableBackdrop();\r\n                            }\r\n                            gesture.enable(true);\r\n                            resolve();\r\n                        });\r\n                    }\r\n                    else {\r\n                        gesture.enable(true);\r\n                        resolve();\r\n                    }\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n                /**\r\n                 * This must be a one time callback\r\n                 * otherwise a new callback will\r\n                 * be added every time onEnd runs.\r\n                 */\r\n            }, { oneTimeCallback: true })\r\n                .progressEnd(1, 0, animated ? 500 : 0);\r\n        });\r\n    };\r\n    const gesture = createGesture({\r\n        el: wrapperEl,\r\n        gestureName: 'modalSheet',\r\n        gesturePriority: 40,\r\n        direction: 'y',\r\n        threshold: 10,\r\n        canStart,\r\n        onStart,\r\n        onMove,\r\n        onEnd,\r\n    });\r\n    return {\r\n        gesture,\r\n        moveSheetToBreakpoint,\r\n    };\r\n};\r\n\r\nconst modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-card) .modal-wrapper,:host-context([dir=rtl]).modal-card .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}@supports selector(:dir(rtl)){:host(.modal-card:dir(rtl)) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-sheet) .modal-wrapper,:host-context([dir=rtl]).modal-sheet .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}@supports selector(:dir(rtl)){:host(.modal-sheet:dir(rtl)) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}}\";\r\nconst IonModalIosStyle0 = modalIosCss;\r\n\r\nconst modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\r\nconst IonModalMdStyle0 = modalMdCss;\r\n\r\nconst Modal = /*@__PURE__*/ proxyCustomElement(class Modal extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.__registerHost();\r\n        this.__attachShadow();\r\n        this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\r\n        this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\r\n        this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\r\n        this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\r\n        this.ionBreakpointDidChange = createEvent(this, \"ionBreakpointDidChange\", 7);\r\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\r\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\r\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\r\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\r\n        this.ionMount = createEvent(this, \"ionMount\", 7);\r\n        this.lockController = createLockController();\r\n        this.triggerController = createTriggerController();\r\n        this.coreDelegate = CoreDelegate();\r\n        this.isSheetModal = false;\r\n        this.inheritedAttributes = {};\r\n        this.inline = false;\r\n        // Whether or not modal is being dismissed via gesture\r\n        this.gestureAnimationDismissing = false;\r\n        this.onHandleClick = () => {\r\n            const { sheetTransition, handleBehavior } = this;\r\n            if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {\r\n                /**\r\n                 * The sheet modal should not advance to the next breakpoint\r\n                 * if the handle behavior is not `cycle` or if the handle\r\n                 * is clicked while the sheet is moving to a breakpoint.\r\n                 */\r\n                return;\r\n            }\r\n            this.moveToNextBreakpoint();\r\n        };\r\n        this.onBackdropTap = () => {\r\n            const { sheetTransition } = this;\r\n            if (sheetTransition !== undefined) {\r\n                /**\r\n                 * When the handle is double clicked at the largest breakpoint,\r\n                 * it will start to move to the first breakpoint. While transitioning,\r\n                 * the backdrop will often receive the second click. We prevent the\r\n                 * backdrop from dismissing the modal while moving between breakpoints.\r\n                 */\r\n                return;\r\n            }\r\n            this.dismiss(undefined, BACKDROP);\r\n        };\r\n        this.onLifecycle = (modalEvent) => {\r\n            const el = this.usersElement;\r\n            const name = LIFECYCLE_MAP[modalEvent.type];\r\n            if (el && name) {\r\n                const ev = new CustomEvent(name, {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    detail: modalEvent.detail,\r\n                });\r\n                el.dispatchEvent(ev);\r\n            }\r\n        };\r\n        this.presented = false;\r\n        this.hasController = false;\r\n        this.overlayIndex = undefined;\r\n        this.delegate = undefined;\r\n        this.keyboardClose = true;\r\n        this.enterAnimation = undefined;\r\n        this.leaveAnimation = undefined;\r\n        this.breakpoints = undefined;\r\n        this.initialBreakpoint = undefined;\r\n        this.backdropBreakpoint = 0;\r\n        this.handle = undefined;\r\n        this.handleBehavior = 'none';\r\n        this.component = undefined;\r\n        this.componentProps = undefined;\r\n        this.cssClass = undefined;\r\n        this.backdropDismiss = true;\r\n        this.showBackdrop = true;\r\n        this.animated = true;\r\n        this.presentingElement = undefined;\r\n        this.htmlAttributes = undefined;\r\n        this.isOpen = false;\r\n        this.trigger = undefined;\r\n        this.keepContentsMounted = false;\r\n        this.canDismiss = true;\r\n    }\r\n    onIsOpenChange(newValue, oldValue) {\r\n        if (newValue === true && oldValue === false) {\r\n            this.present();\r\n        }\r\n        else if (newValue === false && oldValue === true) {\r\n            this.dismiss();\r\n        }\r\n    }\r\n    triggerChanged() {\r\n        const { trigger, el, triggerController } = this;\r\n        if (trigger) {\r\n            triggerController.addClickListener(el, trigger);\r\n        }\r\n    }\r\n    breakpointsChanged(breakpoints) {\r\n        if (breakpoints !== undefined) {\r\n            this.sortedBreakpoints = breakpoints.sort((a, b) => a - b);\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        const { el } = this;\r\n        prepareOverlay(el);\r\n        this.triggerChanged();\r\n    }\r\n    disconnectedCallback() {\r\n        this.triggerController.removeClickListener();\r\n    }\r\n    componentWillLoad() {\r\n        const { breakpoints, initialBreakpoint, el, htmlAttributes } = this;\r\n        const isSheetModal = (this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined);\r\n        const attributesToInherit = ['aria-label', 'role'];\r\n        this.inheritedAttributes = inheritAttributes(el, attributesToInherit);\r\n        /**\r\n         * When using a controller modal you can set attributes\r\n         * using the htmlAttributes property. Since the above attributes\r\n         * need to be inherited inside of the modal, we need to look\r\n         * and see if these attributes are being set via htmlAttributes.\r\n         *\r\n         * We could alternatively move this to componentDidLoad to simplify the work\r\n         * here, but we'd then need to make inheritedAttributes a State variable,\r\n         * thus causing another render to always happen after the first render.\r\n         */\r\n        if (htmlAttributes !== undefined) {\r\n            attributesToInherit.forEach((attribute) => {\r\n                const attributeValue = htmlAttributes[attribute];\r\n                if (attributeValue) {\r\n                    /**\r\n                     * If an attribute we need to inherit was\r\n                     * set using htmlAttributes then add it to\r\n                     * inheritedAttributes and remove it from htmlAttributes.\r\n                     * This ensures the attribute is inherited and not\r\n                     * set on the host.\r\n                     *\r\n                     * In this case, if an inherited attribute is set\r\n                     * on the host element and using htmlAttributes then\r\n                     * htmlAttributes wins, but that's not a pattern that we recommend.\r\n                     * The only time you'd need htmlAttributes is when using modalController.\r\n                     */\r\n                    this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { [attribute]: htmlAttributes[attribute] });\r\n                    delete htmlAttributes[attribute];\r\n                }\r\n            });\r\n        }\r\n        if (isSheetModal) {\r\n            this.currentBreakpoint = this.initialBreakpoint;\r\n        }\r\n        if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\r\n            printIonWarning('Your breakpoints array must include the initialBreakpoint value.');\r\n        }\r\n        setOverlayId(el);\r\n    }\r\n    componentDidLoad() {\r\n        /**\r\n         * If modal was rendered with isOpen=\"true\"\r\n         * then we should open modal immediately.\r\n         */\r\n        if (this.isOpen === true) {\r\n            raf(() => this.present());\r\n        }\r\n        this.breakpointsChanged(this.breakpoints);\r\n        /**\r\n         * When binding values in frameworks such as Angular\r\n         * it is possible for the value to be set after the Web Component\r\n         * initializes but before the value watcher is set up in Stencil.\r\n         * As a result, the watcher callback may not be fired.\r\n         * We work around this by manually calling the watcher\r\n         * callback when the component has loaded and the watcher\r\n         * is configured.\r\n         */\r\n        this.triggerChanged();\r\n    }\r\n    /**\r\n     * Determines whether or not an overlay\r\n     * is being used inline or via a controller/JS\r\n     * and returns the correct delegate.\r\n     * By default, subsequent calls to getDelegate\r\n     * will use a cached version of the delegate.\r\n     * This is useful for calling dismiss after\r\n     * present so that the correct delegate is given.\r\n     */\r\n    getDelegate(force = false) {\r\n        if (this.workingDelegate && !force) {\r\n            return {\r\n                delegate: this.workingDelegate,\r\n                inline: this.inline,\r\n            };\r\n        }\r\n        /**\r\n         * If using overlay inline\r\n         * we potentially need to use the coreDelegate\r\n         * so that this works in vanilla JS apps.\r\n         * If a developer has presented this component\r\n         * via a controller, then we can assume\r\n         * the component is already in the\r\n         * correct place.\r\n         */\r\n        const parentEl = this.el.parentNode;\r\n        const inline = (this.inline = parentEl !== null && !this.hasController);\r\n        const delegate = (this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate);\r\n        return { inline, delegate };\r\n    }\r\n    /**\r\n     * Determines whether or not the\r\n     * modal is allowed to dismiss based\r\n     * on the state of the canDismiss prop.\r\n     */\r\n    async checkCanDismiss(data, role) {\r\n        const { canDismiss } = this;\r\n        if (typeof canDismiss === 'function') {\r\n            return canDismiss(data, role);\r\n        }\r\n        return canDismiss;\r\n    }\r\n    /**\r\n     * Present the modal overlay after it has been created.\r\n     */\r\n    async present() {\r\n        const unlock = await this.lockController.lock();\r\n        if (this.presented) {\r\n            unlock();\r\n            return;\r\n        }\r\n        const { presentingElement, el } = this;\r\n        /**\r\n         * If the modal is presented multiple times (inline modals), we\r\n         * need to reset the current breakpoint to the initial breakpoint.\r\n         */\r\n        this.currentBreakpoint = this.initialBreakpoint;\r\n        const { inline, delegate } = this.getDelegate(true);\r\n        /**\r\n         * Emit ionMount so JS Frameworks have an opportunity\r\n         * to add the child component to the DOM. The child\r\n         * component will be assigned to this.usersElement below.\r\n         */\r\n        this.ionMount.emit();\r\n        this.usersElement = await attachComponent(delegate, el, this.component, ['ion-page'], this.componentProps, inline);\r\n        /**\r\n         * When using the lazy loaded build of Stencil, we need to wait\r\n         * for every Stencil component instance to be ready before presenting\r\n         * otherwise there can be a flash of unstyled content. With the\r\n         * custom elements bundle we need to wait for the JS framework\r\n         * mount the inner contents of the overlay otherwise WebKit may\r\n         * get the transition incorrect.\r\n         */\r\n        if (hasLazyBuild(el)) {\r\n            await deepReady(this.usersElement);\r\n            /**\r\n             * If keepContentsMounted=\"true\" then the\r\n             * JS Framework has already mounted the inner\r\n             * contents so there is no need to wait.\r\n             * Otherwise, we need to wait for the JS\r\n             * Framework to mount the inner contents\r\n             * of this component.\r\n             */\r\n        }\r\n        else if (!this.keepContentsMounted) {\r\n            await waitForMount();\r\n        }\r\n        writeTask(() => this.el.classList.add('show-modal'));\r\n        const hasCardModal = presentingElement !== undefined;\r\n        /**\r\n         * We need to change the status bar at the\r\n         * start of the animation so that it completes\r\n         * by the time the card animation is done.\r\n         */\r\n        if (hasCardModal && getIonMode(this) === 'ios') {\r\n            // Cache the original status bar color before the modal is presented\r\n            this.statusBarStyle = await StatusBar.getStyle();\r\n            setCardStatusBarDark();\r\n        }\r\n        await present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\r\n            presentingEl: presentingElement,\r\n            currentBreakpoint: this.initialBreakpoint,\r\n            backdropBreakpoint: this.backdropBreakpoint,\r\n        });\r\n        /* tslint:disable-next-line */\r\n        if (typeof window !== 'undefined') {\r\n            /**\r\n             * This needs to be setup before any\r\n             * non-transition async work so it can be dereferenced\r\n             * in the dismiss method. The dismiss method\r\n             * only waits for the entering transition\r\n             * to finish. It does not wait for all of the `present`\r\n             * method to resolve.\r\n             */\r\n            this.keyboardOpenCallback = () => {\r\n                if (this.gesture) {\r\n                    /**\r\n                     * When the native keyboard is opened and the webview\r\n                     * is resized, the gesture implementation will become unresponsive\r\n                     * and enter a free-scroll mode.\r\n                     *\r\n                     * When the keyboard is opened, we disable the gesture for\r\n                     * a single frame and re-enable once the contents have repositioned\r\n                     * from the keyboard placement.\r\n                     */\r\n                    this.gesture.enable(false);\r\n                    raf(() => {\r\n                        if (this.gesture) {\r\n                            this.gesture.enable(true);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\r\n        }\r\n        if (this.isSheetModal) {\r\n            this.initSheetGesture();\r\n        }\r\n        else if (hasCardModal) {\r\n            this.initSwipeToClose();\r\n        }\r\n        unlock();\r\n    }\r\n    initSwipeToClose() {\r\n        var _a;\r\n        if (getIonMode(this) !== 'ios') {\r\n            return;\r\n        }\r\n        const { el } = this;\r\n        // All of the elements needed for the swipe gesture\r\n        // should be in the DOM and referenced by now, except\r\n        // for the presenting el\r\n        const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\r\n        const ani = (this.animation = animationBuilder(el, { presentingEl: this.presentingElement }));\r\n        const contentEl = findIonContent(el);\r\n        if (!contentEl) {\r\n            printIonContentErrorMsg(el);\r\n            return;\r\n        }\r\n        const statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;\r\n        this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, () => {\r\n            /**\r\n             * While the gesture animation is finishing\r\n             * it is possible for a user to tap the backdrop.\r\n             * This would result in the dismiss animation\r\n             * being played again. Typically this is avoided\r\n             * by setting `presented = false` on the overlay\r\n             * component; however, we cannot do that here as\r\n             * that would prevent the element from being\r\n             * removed from the DOM.\r\n             */\r\n            this.gestureAnimationDismissing = true;\r\n            /**\r\n             * Reset the status bar style as the dismiss animation\r\n             * starts otherwise the status bar will be the wrong\r\n             * color for the duration of the dismiss animation.\r\n             * The dismiss method does this as well, but\r\n             * in this case it's only called once the animation\r\n             * has finished.\r\n             */\r\n            setCardStatusBarDefault(this.statusBarStyle);\r\n            this.animation.onFinish(async () => {\r\n                await this.dismiss(undefined, GESTURE);\r\n                this.gestureAnimationDismissing = false;\r\n            });\r\n        });\r\n        this.gesture.enable(true);\r\n    }\r\n    initSheetGesture() {\r\n        const { wrapperEl, initialBreakpoint, backdropBreakpoint } = this;\r\n        if (!wrapperEl || initialBreakpoint === undefined) {\r\n            return;\r\n        }\r\n        const animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\r\n        const ani = (this.animation = animationBuilder(this.el, {\r\n            presentingEl: this.presentingElement,\r\n            currentBreakpoint: initialBreakpoint,\r\n            backdropBreakpoint,\r\n        }));\r\n        ani.progressStart(true, 1);\r\n        const { gesture, moveSheetToBreakpoint } = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, () => { var _a; return (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : 0; }, () => this.sheetOnDismiss(), (breakpoint) => {\r\n            if (this.currentBreakpoint !== breakpoint) {\r\n                this.currentBreakpoint = breakpoint;\r\n                this.ionBreakpointDidChange.emit({ breakpoint });\r\n            }\r\n        });\r\n        this.gesture = gesture;\r\n        this.moveSheetToBreakpoint = moveSheetToBreakpoint;\r\n        this.gesture.enable(true);\r\n    }\r\n    sheetOnDismiss() {\r\n        /**\r\n         * While the gesture animation is finishing\r\n         * it is possible for a user to tap the backdrop.\r\n         * This would result in the dismiss animation\r\n         * being played again. Typically this is avoided\r\n         * by setting `presented = false` on the overlay\r\n         * component; however, we cannot do that here as\r\n         * that would prevent the element from being\r\n         * removed from the DOM.\r\n         */\r\n        this.gestureAnimationDismissing = true;\r\n        this.animation.onFinish(async () => {\r\n            this.currentBreakpoint = 0;\r\n            this.ionBreakpointDidChange.emit({ breakpoint: this.currentBreakpoint });\r\n            await this.dismiss(undefined, GESTURE);\r\n            this.gestureAnimationDismissing = false;\r\n        });\r\n    }\r\n    /**\r\n     * Dismiss the modal overlay after it has been presented.\r\n     *\r\n     * @param data Any data to emit in the dismiss events.\r\n     * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\r\n     *\r\n     * This is a no-op if the overlay has not been presented yet. If you want\r\n     * to remove an overlay from the DOM that was never presented, use the\r\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\r\n     */\r\n    async dismiss(data, role) {\r\n        var _a;\r\n        if (this.gestureAnimationDismissing && role !== GESTURE) {\r\n            return false;\r\n        }\r\n        /**\r\n         * Because the canDismiss check below is async,\r\n         * we need to claim a lock before the check happens,\r\n         * in case the dismiss transition does run.\r\n         */\r\n        const unlock = await this.lockController.lock();\r\n        /**\r\n         * If a canDismiss handler is responsible\r\n         * for calling the dismiss method, we should\r\n         * not run the canDismiss check again.\r\n         */\r\n        if (role !== 'handler' && !(await this.checkCanDismiss(data, role))) {\r\n            unlock();\r\n            return false;\r\n        }\r\n        const { presentingElement } = this;\r\n        /**\r\n         * We need to start the status bar change\r\n         * before the animation so that the change\r\n         * finishes when the dismiss animation does.\r\n         */\r\n        const hasCardModal = presentingElement !== undefined;\r\n        if (hasCardModal && getIonMode(this) === 'ios') {\r\n            setCardStatusBarDefault(this.statusBarStyle);\r\n        }\r\n        /* tslint:disable-next-line */\r\n        if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\r\n            window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\r\n            this.keyboardOpenCallback = undefined;\r\n        }\r\n        const dismissed = await dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\r\n            presentingEl: presentingElement,\r\n            currentBreakpoint: (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : this.initialBreakpoint,\r\n            backdropBreakpoint: this.backdropBreakpoint,\r\n        });\r\n        if (dismissed) {\r\n            const { delegate } = this.getDelegate();\r\n            await detachComponent(delegate, this.usersElement);\r\n            writeTask(() => this.el.classList.remove('show-modal'));\r\n            if (this.animation) {\r\n                this.animation.destroy();\r\n            }\r\n            if (this.gesture) {\r\n                this.gesture.destroy();\r\n            }\r\n        }\r\n        this.currentBreakpoint = undefined;\r\n        this.animation = undefined;\r\n        unlock();\r\n        return dismissed;\r\n    }\r\n    /**\r\n     * Returns a promise that resolves when the modal did dismiss.\r\n     */\r\n    onDidDismiss() {\r\n        return eventMethod(this.el, 'ionModalDidDismiss');\r\n    }\r\n    /**\r\n     * Returns a promise that resolves when the modal will dismiss.\r\n     */\r\n    onWillDismiss() {\r\n        return eventMethod(this.el, 'ionModalWillDismiss');\r\n    }\r\n    /**\r\n     * Move a sheet style modal to a specific breakpoint. The breakpoint value must\r\n     * be a value defined in your `breakpoints` array.\r\n     */\r\n    async setCurrentBreakpoint(breakpoint) {\r\n        if (!this.isSheetModal) {\r\n            printIonWarning('setCurrentBreakpoint is only supported on sheet modals.');\r\n            return;\r\n        }\r\n        if (!this.breakpoints.includes(breakpoint)) {\r\n            printIonWarning(`Attempted to set invalid breakpoint value ${breakpoint}. Please double check that the breakpoint value is part of your defined breakpoints.`);\r\n            return;\r\n        }\r\n        const { currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints, animated } = this;\r\n        if (currentBreakpoint === breakpoint) {\r\n            return;\r\n        }\r\n        if (moveSheetToBreakpoint) {\r\n            this.sheetTransition = moveSheetToBreakpoint({\r\n                breakpoint,\r\n                breakpointOffset: 1 - currentBreakpoint,\r\n                canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0,\r\n                animated,\r\n            });\r\n            await this.sheetTransition;\r\n            this.sheetTransition = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the current breakpoint of a sheet style modal\r\n     */\r\n    async getCurrentBreakpoint() {\r\n        return this.currentBreakpoint;\r\n    }\r\n    async moveToNextBreakpoint() {\r\n        const { breakpoints, currentBreakpoint } = this;\r\n        if (!breakpoints || currentBreakpoint == null) {\r\n            /**\r\n             * If the modal does not have breakpoints and/or the current\r\n             * breakpoint is not set, we can't move to the next breakpoint.\r\n             */\r\n            return false;\r\n        }\r\n        const allowedBreakpoints = breakpoints.filter((b) => b !== 0);\r\n        const currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);\r\n        const nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;\r\n        const nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];\r\n        /**\r\n         * Sets the current breakpoint to the next available breakpoint.\r\n         * If the current breakpoint is the last breakpoint, we set the current\r\n         * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.\r\n         */\r\n        await this.setCurrentBreakpoint(nextBreakpoint);\r\n        return true;\r\n    }\r\n    render() {\r\n        const { handle, isSheetModal, presentingElement, htmlAttributes, handleBehavior, inheritedAttributes } = this;\r\n        const showHandle = handle !== false && isSheetModal;\r\n        const mode = getIonMode(this);\r\n        const isCardModal = presentingElement !== undefined && mode === 'ios';\r\n        const isHandleCycle = handleBehavior === 'cycle';\r\n        return (h(Host, Object.assign({ key: '67ef0269a5e9b542d0c2acaa03a2f7f46b8cf0b5', \"no-router\": true, tabindex: \"-1\" }, htmlAttributes, { style: {\r\n                zIndex: `${20000 + this.overlayIndex}`,\r\n            }, class: Object.assign({ [mode]: true, ['modal-default']: !isCardModal && !isSheetModal, [`modal-card`]: isCardModal, [`modal-sheet`]: isSheetModal, 'overlay-hidden': true }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonModalDidPresent: this.onLifecycle, onIonModalWillPresent: this.onLifecycle, onIonModalWillDismiss: this.onLifecycle, onIonModalDidDismiss: this.onLifecycle }), h(\"ion-backdrop\", { key: 'edd98375e98d887dbea232adb81b74f164fa058b', ref: (el) => (this.backdropEl = el), visible: this.showBackdrop, tappable: this.backdropDismiss, part: \"backdrop\" }), mode === 'ios' && h(\"div\", { class: \"modal-shadow\" }), h(\"div\", Object.assign({ key: '40437670391544b57b8a9943ef3b49de7acbd873',\r\n            /*\r\n              role and aria-modal must be used on the\r\n              same element. They must also be set inside the\r\n              shadow DOM otherwise ion-button will not be highlighted\r\n              when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134\r\n            */\r\n            role: \"dialog\" }, inheritedAttributes, { \"aria-modal\": \"true\", class: \"modal-wrapper ion-overlay-wrapper\", part: \"content\", ref: (el) => (this.wrapperEl = el) }), showHandle && (h(\"button\", { class: \"modal-handle\",\r\n            // Prevents the handle from receiving keyboard focus when it does not cycle\r\n            tabIndex: !isHandleCycle ? -1 : 0, \"aria-label\": \"Activate to adjust the size of the dialog overlaying the screen\", onClick: isHandleCycle ? this.onHandleClick : undefined, part: \"handle\" })), h(\"slot\", { key: 'dfe2095d9e1adb075dc09d1927ef24ea09ea5435' }))));\r\n    }\r\n    get el() { return this; }\r\n    static get watchers() { return {\r\n        \"isOpen\": [\"onIsOpenChange\"],\r\n        \"trigger\": [\"triggerChanged\"]\r\n    }; }\r\n    static get style() { return {\r\n        ios: IonModalIosStyle0,\r\n        md: IonModalMdStyle0\r\n    }; }\r\n}, [33, \"ion-modal\", {\r\n        \"hasController\": [4, \"has-controller\"],\r\n        \"overlayIndex\": [2, \"overlay-index\"],\r\n        \"delegate\": [16],\r\n        \"keyboardClose\": [4, \"keyboard-close\"],\r\n        \"enterAnimation\": [16],\r\n        \"leaveAnimation\": [16],\r\n        \"breakpoints\": [16],\r\n        \"initialBreakpoint\": [2, \"initial-breakpoint\"],\r\n        \"backdropBreakpoint\": [2, \"backdrop-breakpoint\"],\r\n        \"handle\": [4],\r\n        \"handleBehavior\": [1, \"handle-behavior\"],\r\n        \"component\": [1],\r\n        \"componentProps\": [16],\r\n        \"cssClass\": [1, \"css-class\"],\r\n        \"backdropDismiss\": [4, \"backdrop-dismiss\"],\r\n        \"showBackdrop\": [4, \"show-backdrop\"],\r\n        \"animated\": [4],\r\n        \"presentingElement\": [16],\r\n        \"htmlAttributes\": [16],\r\n        \"isOpen\": [4, \"is-open\"],\r\n        \"trigger\": [1],\r\n        \"keepContentsMounted\": [4, \"keep-contents-mounted\"],\r\n        \"canDismiss\": [4, \"can-dismiss\"],\r\n        \"presented\": [32],\r\n        \"present\": [64],\r\n        \"dismiss\": [64],\r\n        \"onDidDismiss\": [64],\r\n        \"onWillDismiss\": [64],\r\n        \"setCurrentBreakpoint\": [64],\r\n        \"getCurrentBreakpoint\": [64]\r\n    }, undefined, {\r\n        \"isOpen\": [\"onIsOpenChange\"],\r\n        \"trigger\": [\"triggerChanged\"]\r\n    }]);\r\nconst LIFECYCLE_MAP = {\r\n    ionModalDidPresent: 'ionViewDidEnter',\r\n    ionModalWillPresent: 'ionViewWillEnter',\r\n    ionModalWillDismiss: 'ionViewWillLeave',\r\n    ionModalDidDismiss: 'ionViewDidLeave',\r\n};\r\nfunction defineCustomElement$1() {\r\n    if (typeof customElements === \"undefined\") {\r\n        return;\r\n    }\r\n    const components = [\"ion-modal\", \"ion-backdrop\"];\r\n    components.forEach(tagName => { switch (tagName) {\r\n        case \"ion-modal\":\r\n            if (!customElements.get(tagName)) {\r\n                customElements.define(tagName, Modal);\r\n            }\r\n            break;\r\n        case \"ion-backdrop\":\r\n            if (!customElements.get(tagName)) {\r\n                defineCustomElement$2();\r\n            }\r\n            break;\r\n    } });\r\n}\r\n\r\nconst IonModal = Modal;\r\nconst defineCustomElement = defineCustomElement$1;\r\n\r\nexport { IonModal, defineCustomElement };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}