{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { p as printIonWarning } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:16px;margin-bottom:16px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\nconst IonAccordionGroupIosStyle0 = accordionGroupIosCss;\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:16px;margin-bottom:16px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}@supports selector(:dir(rtl)){:host(.accordion-group-expand-inset:dir(rtl)) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}@supports selector(:dir(rtl)){:host(.accordion-group-expand-inset:dir(rtl)) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\nconst IonAccordionGroupMdStyle0 = accordionGroupMdCss;\nconst AccordionGroup = /*@__PURE__*/proxyCustomElement(class AccordionGroup extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n    this.animated = true;\n    this.multiple = undefined;\n    this.value = undefined;\n    this.disabled = false;\n    this.readonly = false;\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const {\n      value,\n      multiple\n    } = this;\n    if (!multiple && Array.isArray(value)) {\n      /**\n       * We do some processing on the `value` array so\n       * that it looks more like an array when logged to\n       * the console.\n       * Example given ['a', 'b']\n       * Default toString() behavior: a,b\n       * Custom behavior: ['a', 'b']\n       */\n      printIonWarning(`ion-accordion-group was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map(v => `'${v}'`).join(', ')}]\n`, this.el);\n    }\n    /**\n     * Do not use `value` here as that will be\n     * not account for the adjustment we make above.\n     */\n    this.ionValueChange.emit({\n      value: this.value\n    });\n  }\n  async disabledChanged() {\n    const {\n      disabled\n    } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const {\n      readonly\n    } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    /**\n     * Make sure focus is in the header, not the body, of the accordion. This ensures\n     * that if there are any interactable elements in the body, their keyboard\n     * interaction doesn't get stolen by the accordion. Example: using up/down keys\n     * in ion-textarea.\n     */\n    const activeAccordionHeader = activeElement.closest('ion-accordion [slot=\"header\"]');\n    if (!activeAccordionHeader) {\n      return;\n    }\n    const accordionEl = activeElement.tagName === 'ION-ACCORDION' ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex(a => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    } else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    } else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    } else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n    /**\n     * When binding values in frameworks such as Angular\n     * it is possible for the value to be set after the Web Component\n     * initializes but before the value watcher is set up in Stencil.\n     * As a result, the watcher callback may not be fired.\n     * We work around this by manually calling the watcher\n     * callback when the component has loaded and the watcher\n     * is configured.\n     */\n    this.valueChanged();\n  }\n  /**\n   * Sets the value property and emits ionChange.\n   * This should only be called when the user interacts\n   * with the accordion and not for any update\n   * to the value property. The exception is when\n   * the app sets the value of a single-select\n   * accordion group to an array.\n   */\n  setValue(accordionValue) {\n    const value = this.value = accordionValue;\n    this.ionChange.emit({\n      value\n    });\n  }\n  /**\n   * This method is used to ensure that the value\n   * of ion-accordion-group is being set in a valid\n   * way. This method should only be called in\n   * response to a user generated action.\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const {\n      multiple,\n      value,\n      readonly,\n      disabled\n    } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value !== null && value !== void 0 ? value : [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find(v => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.setValue([...processedValue, accordionValue]);\n        }\n      } else {\n        this.setValue(accordionValue);\n      }\n    } else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value !== null && value !== void 0 ? value : [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.setValue(processedValue.filter(v => v !== accordionValue));\n      } else {\n        this.setValue(undefined);\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const {\n      disabled,\n      readonly,\n      expand\n    } = this;\n    const mode = getIonMode(this);\n    return h(Host, {\n      key: 'ac2e26ac91c95d08172bd2b51daa7a711c21db9e',\n      class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true\n      },\n      role: \"presentation\"\n    }, h(\"slot\", {\n      key: '444adc2af5730897eba57095da046d6bdb5af70f'\n    }));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"readonly\": [\"readonlyChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: IonAccordionGroupIosStyle0,\n      md: IonAccordionGroupMdStyle0\n    };\n  }\n}, [33, \"ion-accordion-group\", {\n  \"animated\": [4],\n  \"multiple\": [4],\n  \"value\": [1025],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"expand\": [1],\n  \"requestAccordionToggle\": [64],\n  \"getAccordions\": [64]\n}, [[0, \"keydown\", \"onKeydown\"]], {\n  \"value\": [\"valueChanged\"],\n  \"disabled\": [\"disabledChanged\"],\n  \"readonly\": [\"readonlyChanged\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-accordion-group\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-accordion-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, AccordionGroup);\n        }\n        break;\n    }\n  });\n}\nconst IonAccordionGroup = AccordionGroup;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonAccordionGroup, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","p","printIonWarning","b","getIonMode","accordionGroupIosCss","IonAccordionGroupIosStyle0","accordionGroupMdCss","IonAccordionGroupMdStyle0","AccordionGroup","constructor","__registerHost","__attachShadow","ionChange","ionValueChange","animated","multiple","undefined","value","disabled","readonly","expand","valueChanged","Array","isArray","map","v","join","el","emit","disabledChanged","accordions","getAccordions","accordion","readonlyChanged","onKeydown","ev","activeElement","document","activeAccordionHeader","closest","accordionEl","tagName","closestGroup","startingIndex","findIndex","a","key","findNextAccordion","findPreviousAccordion","length","focus","componentDidLoad","setValue","accordionValue","requestAccordionToggle","accordionExpand","groupValue","processedValue","valueExists","find","filter","nextAccordion","prevAccordion","from","querySelectorAll","render","mode","class","role","watchers","style","ios","md","defineCustomElement$1","customElements","components","forEach","get","define","IonAccordionGroup","defineCustomElement"],"sources":["D:/CIT/SEM 6/17MDCEL4 - Full Stack Web Application Development Laboratory/Online-Voting-Portal/client/node_modules/@ionic/core/components/ion-accordion-group.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { p as printIonWarning } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:16px;margin-bottom:16px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\nconst IonAccordionGroupIosStyle0 = accordionGroupIosCss;\n\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:16px;margin-bottom:16px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}@supports selector(:dir(rtl)){:host(.accordion-group-expand-inset:dir(rtl)) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}@supports selector(:dir(rtl)){:host(.accordion-group-expand-inset:dir(rtl)) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\nconst IonAccordionGroupMdStyle0 = accordionGroupMdCss;\n\nconst AccordionGroup = /*@__PURE__*/ proxyCustomElement(class AccordionGroup extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n        this.animated = true;\n        this.multiple = undefined;\n        this.value = undefined;\n        this.disabled = false;\n        this.readonly = false;\n        this.expand = 'compact';\n    }\n    valueChanged() {\n        const { value, multiple } = this;\n        if (!multiple && Array.isArray(value)) {\n            /**\n             * We do some processing on the `value` array so\n             * that it looks more like an array when logged to\n             * the console.\n             * Example given ['a', 'b']\n             * Default toString() behavior: a,b\n             * Custom behavior: ['a', 'b']\n             */\n            printIonWarning(`ion-accordion-group was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n        }\n        /**\n         * Do not use `value` here as that will be\n         * not account for the adjustment we make above.\n         */\n        this.ionValueChange.emit({ value: this.value });\n    }\n    async disabledChanged() {\n        const { disabled } = this;\n        const accordions = await this.getAccordions();\n        for (const accordion of accordions) {\n            accordion.disabled = disabled;\n        }\n    }\n    async readonlyChanged() {\n        const { readonly } = this;\n        const accordions = await this.getAccordions();\n        for (const accordion of accordions) {\n            accordion.readonly = readonly;\n        }\n    }\n    async onKeydown(ev) {\n        const activeElement = document.activeElement;\n        if (!activeElement) {\n            return;\n        }\n        /**\n         * Make sure focus is in the header, not the body, of the accordion. This ensures\n         * that if there are any interactable elements in the body, their keyboard\n         * interaction doesn't get stolen by the accordion. Example: using up/down keys\n         * in ion-textarea.\n         */\n        const activeAccordionHeader = activeElement.closest('ion-accordion [slot=\"header\"]');\n        if (!activeAccordionHeader) {\n            return;\n        }\n        const accordionEl = activeElement.tagName === 'ION-ACCORDION' ? activeElement : activeElement.closest('ion-accordion');\n        if (!accordionEl) {\n            return;\n        }\n        const closestGroup = accordionEl.closest('ion-accordion-group');\n        if (closestGroup !== this.el) {\n            return;\n        }\n        // If the active accordion is not in the current array of accordions, do not do anything\n        const accordions = await this.getAccordions();\n        const startingIndex = accordions.findIndex((a) => a === accordionEl);\n        if (startingIndex === -1) {\n            return;\n        }\n        let accordion;\n        if (ev.key === 'ArrowDown') {\n            accordion = this.findNextAccordion(accordions, startingIndex);\n        }\n        else if (ev.key === 'ArrowUp') {\n            accordion = this.findPreviousAccordion(accordions, startingIndex);\n        }\n        else if (ev.key === 'Home') {\n            accordion = accordions[0];\n        }\n        else if (ev.key === 'End') {\n            accordion = accordions[accordions.length - 1];\n        }\n        if (accordion !== undefined && accordion !== activeElement) {\n            accordion.focus();\n        }\n    }\n    async componentDidLoad() {\n        if (this.disabled) {\n            this.disabledChanged();\n        }\n        if (this.readonly) {\n            this.readonlyChanged();\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.valueChanged();\n    }\n    /**\n     * Sets the value property and emits ionChange.\n     * This should only be called when the user interacts\n     * with the accordion and not for any update\n     * to the value property. The exception is when\n     * the app sets the value of a single-select\n     * accordion group to an array.\n     */\n    setValue(accordionValue) {\n        const value = (this.value = accordionValue);\n        this.ionChange.emit({ value });\n    }\n    /**\n     * This method is used to ensure that the value\n     * of ion-accordion-group is being set in a valid\n     * way. This method should only be called in\n     * response to a user generated action.\n     * @internal\n     */\n    async requestAccordionToggle(accordionValue, accordionExpand) {\n        const { multiple, value, readonly, disabled } = this;\n        if (readonly || disabled) {\n            return;\n        }\n        if (accordionExpand) {\n            /**\n             * If group accepts multiple values\n             * check to see if value is already in\n             * in values array. If not, add it\n             * to the array.\n             */\n            if (multiple) {\n                const groupValue = value !== null && value !== void 0 ? value : [];\n                const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n                const valueExists = processedValue.find((v) => v === accordionValue);\n                if (valueExists === undefined && accordionValue !== undefined) {\n                    this.setValue([...processedValue, accordionValue]);\n                }\n            }\n            else {\n                this.setValue(accordionValue);\n            }\n        }\n        else {\n            /**\n             * If collapsing accordion, either filter the value\n             * out of the values array or unset the value.\n             */\n            if (multiple) {\n                const groupValue = value !== null && value !== void 0 ? value : [];\n                const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n                this.setValue(processedValue.filter((v) => v !== accordionValue));\n            }\n            else {\n                this.setValue(undefined);\n            }\n        }\n    }\n    findNextAccordion(accordions, startingIndex) {\n        const nextAccordion = accordions[startingIndex + 1];\n        if (nextAccordion === undefined) {\n            return accordions[0];\n        }\n        return nextAccordion;\n    }\n    findPreviousAccordion(accordions, startingIndex) {\n        const prevAccordion = accordions[startingIndex - 1];\n        if (prevAccordion === undefined) {\n            return accordions[accordions.length - 1];\n        }\n        return prevAccordion;\n    }\n    /**\n     * @internal\n     */\n    async getAccordions() {\n        return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n    }\n    render() {\n        const { disabled, readonly, expand } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'ac2e26ac91c95d08172bd2b51daa7a711c21db9e', class: {\n                [mode]: true,\n                'accordion-group-disabled': disabled,\n                'accordion-group-readonly': readonly,\n                [`accordion-group-expand-${expand}`]: true,\n            }, role: \"presentation\" }, h(\"slot\", { key: '444adc2af5730897eba57095da046d6bdb5af70f' })));\n    }\n    get el() { return this; }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"readonly\": [\"readonlyChanged\"]\n    }; }\n    static get style() { return {\n        ios: IonAccordionGroupIosStyle0,\n        md: IonAccordionGroupMdStyle0\n    }; }\n}, [33, \"ion-accordion-group\", {\n        \"animated\": [4],\n        \"multiple\": [4],\n        \"value\": [1025],\n        \"disabled\": [4],\n        \"readonly\": [4],\n        \"expand\": [1],\n        \"requestAccordionToggle\": [64],\n        \"getAccordions\": [64]\n    }, [[0, \"keydown\", \"onKeydown\"]], {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"readonly\": [\"readonlyChanged\"]\n    }]);\nfunction defineCustomElement$1() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-accordion-group\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-accordion-group\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, AccordionGroup);\n            }\n            break;\n    } });\n}\n\nconst IonAccordionGroup = AccordionGroup;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonAccordionGroup, defineCustomElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}