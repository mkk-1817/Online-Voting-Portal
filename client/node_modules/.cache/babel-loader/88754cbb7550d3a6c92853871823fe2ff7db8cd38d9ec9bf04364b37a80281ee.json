{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers.js';\n\n// TODO(FW-2832): types\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps, inline) => {\n  var _a;\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = typeof component === 'string' ? (_a = container.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(component) : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\nconst CoreDelegate = () => {\n  let BaseComponent;\n  let Reference;\n  const attachViewToDom = async (parentElement, userComponent, userComponentProps = {}, cssClasses = []) => {\n    var _a, _b;\n    BaseComponent = parentElement;\n    let ChildComponent;\n    /**\n     * If passing in a component via the `component` props\n     * we need to append it inside of our overlay component.\n     */\n    if (userComponent) {\n      /**\n       * If passing in the tag name, create\n       * the element otherwise just get a reference\n       * to the component.\n       */\n      const el = typeof userComponent === 'string' ? (_a = BaseComponent.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(userComponent) : userComponent;\n      /**\n       * Add any css classes passed in\n       * via the cssClasses prop on the overlay.\n       */\n      cssClasses.forEach(c => el.classList.add(c));\n      /**\n       * Add any props passed in\n       * via the componentProps prop on the overlay.\n       */\n      Object.assign(el, userComponentProps);\n      /**\n       * Finally, append the component\n       * inside of the overlay component.\n       */\n      BaseComponent.appendChild(el);\n      ChildComponent = el;\n      await new Promise(resolve => componentOnReady(el, resolve));\n    } else if (BaseComponent.children.length > 0 && (BaseComponent.tagName === 'ION-MODAL' || BaseComponent.tagName === 'ION-POPOVER')) {\n      /**\n       * The delegate host wrapper el is only needed for modals and popovers\n       * because they allow the dev to provide custom content to the overlay.\n       */\n      const root = ChildComponent = BaseComponent.children[0];\n      if (!root.classList.contains('ion-delegate-host')) {\n        /**\n         * If the root element is not a delegate host, it means\n         * that the overlay has not been presented yet and we need\n         * to create the containing element with the specified classes.\n         */\n        const el = (_b = BaseComponent.ownerDocument) === null || _b === void 0 ? void 0 : _b.createElement('div');\n        // Add a class to track if the root element was created by the delegate.\n        el.classList.add('ion-delegate-host');\n        cssClasses.forEach(c => el.classList.add(c));\n        // Move each child from the original template to the new parent element.\n        el.append(...BaseComponent.children);\n        // Append the new parent element to the original parent element.\n        BaseComponent.appendChild(el);\n        /**\n         * Update the ChildComponent to be the\n         * newly created div in the event that one\n         * does not already exist.\n         */\n        ChildComponent = el;\n      }\n    }\n    /**\n     * Get the root of the app and\n     * add the overlay there.\n     */\n    const app = document.querySelector('ion-app') || document.body;\n    /**\n     * Create a placeholder comment so that\n     * we can return this component to where\n     * it was previously.\n     */\n    Reference = document.createComment('ionic teleport');\n    BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n    app.appendChild(BaseComponent);\n    /**\n     * We return the child component rather than the overlay\n     * reference itself since modal and popover will\n     * use this to wait for any Ionic components in the child view\n     * to be ready (i.e. componentOnReady) when using the\n     * lazy loaded component bundle.\n     *\n     * However, we fall back to returning BaseComponent\n     * in the event that a modal or popover is presented\n     * with no child content.\n     */\n    return ChildComponent !== null && ChildComponent !== void 0 ? ChildComponent : BaseComponent;\n  };\n  const removeViewFromDom = () => {\n    /**\n     * Return component to where it was previously in the DOM.\n     */\n    if (BaseComponent && Reference) {\n      Reference.parentNode.insertBefore(BaseComponent, Reference);\n      Reference.remove();\n    }\n    return Promise.resolve();\n  };\n  return {\n    attachViewToDom,\n    removeViewFromDom\n  };\n};\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };","map":{"version":3,"names":["c","componentOnReady","attachComponent","delegate","container","component","cssClasses","componentProps","inline","_a","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","classList","add","Object","assign","appendChild","Promise","resolve","detachComponent","element","parentElement","removeViewFromDom","remove","CoreDelegate","BaseComponent","Reference","userComponent","userComponentProps","_b","ChildComponent","children","length","tagName","root","contains","append","app","document","querySelector","body","createComment","parentNode","insertBefore","C","a","d"],"sources":["D:/CIT/SEM 6/17MDCEL4 - Full Stack Web Application Development Laboratory/Online-Voting-Portal/client/node_modules/@ionic/core/components/framework-delegate.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers.js';\n\n// TODO(FW-2832): types\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps, inline) => {\n    var _a;\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = typeof component === 'string' ? (_a = container.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(component) : component;\n    if (cssClasses) {\n        cssClasses.forEach((c) => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    await new Promise((resolve) => componentOnReady(el, resolve));\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\nconst CoreDelegate = () => {\n    let BaseComponent;\n    let Reference;\n    const attachViewToDom = async (parentElement, userComponent, userComponentProps = {}, cssClasses = []) => {\n        var _a, _b;\n        BaseComponent = parentElement;\n        let ChildComponent;\n        /**\n         * If passing in a component via the `component` props\n         * we need to append it inside of our overlay component.\n         */\n        if (userComponent) {\n            /**\n             * If passing in the tag name, create\n             * the element otherwise just get a reference\n             * to the component.\n             */\n            const el = typeof userComponent === 'string' ? (_a = BaseComponent.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(userComponent) : userComponent;\n            /**\n             * Add any css classes passed in\n             * via the cssClasses prop on the overlay.\n             */\n            cssClasses.forEach((c) => el.classList.add(c));\n            /**\n             * Add any props passed in\n             * via the componentProps prop on the overlay.\n             */\n            Object.assign(el, userComponentProps);\n            /**\n             * Finally, append the component\n             * inside of the overlay component.\n             */\n            BaseComponent.appendChild(el);\n            ChildComponent = el;\n            await new Promise((resolve) => componentOnReady(el, resolve));\n        }\n        else if (BaseComponent.children.length > 0 &&\n            (BaseComponent.tagName === 'ION-MODAL' || BaseComponent.tagName === 'ION-POPOVER')) {\n            /**\n             * The delegate host wrapper el is only needed for modals and popovers\n             * because they allow the dev to provide custom content to the overlay.\n             */\n            const root = (ChildComponent = BaseComponent.children[0]);\n            if (!root.classList.contains('ion-delegate-host')) {\n                /**\n                 * If the root element is not a delegate host, it means\n                 * that the overlay has not been presented yet and we need\n                 * to create the containing element with the specified classes.\n                 */\n                const el = (_b = BaseComponent.ownerDocument) === null || _b === void 0 ? void 0 : _b.createElement('div');\n                // Add a class to track if the root element was created by the delegate.\n                el.classList.add('ion-delegate-host');\n                cssClasses.forEach((c) => el.classList.add(c));\n                // Move each child from the original template to the new parent element.\n                el.append(...BaseComponent.children);\n                // Append the new parent element to the original parent element.\n                BaseComponent.appendChild(el);\n                /**\n                 * Update the ChildComponent to be the\n                 * newly created div in the event that one\n                 * does not already exist.\n                 */\n                ChildComponent = el;\n            }\n        }\n        /**\n         * Get the root of the app and\n         * add the overlay there.\n         */\n        const app = document.querySelector('ion-app') || document.body;\n        /**\n         * Create a placeholder comment so that\n         * we can return this component to where\n         * it was previously.\n         */\n        Reference = document.createComment('ionic teleport');\n        BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n        app.appendChild(BaseComponent);\n        /**\n         * We return the child component rather than the overlay\n         * reference itself since modal and popover will\n         * use this to wait for any Ionic components in the child view\n         * to be ready (i.e. componentOnReady) when using the\n         * lazy loaded component bundle.\n         *\n         * However, we fall back to returning BaseComponent\n         * in the event that a modal or popover is presented\n         * with no child content.\n         */\n        return ChildComponent !== null && ChildComponent !== void 0 ? ChildComponent : BaseComponent;\n    };\n    const removeViewFromDom = () => {\n        /**\n         * Return component to where it was previously in the DOM.\n         */\n        if (BaseComponent && Reference) {\n            Reference.parentNode.insertBefore(BaseComponent, Reference);\n            Reference.remove();\n        }\n        return Promise.resolve();\n    };\n    return { attachViewToDom, removeViewFromDom };\n};\n\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}