{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nimport { shouldUseCloseWatcher } from './hardware-back-button.js';\nimport { p as printIonWarning } from './index6.js';\nimport { b as getIonMode, c as config, a as isPlatform } from './ionic-global.js';\nconst appCss = \"html.plt-mobile ion-app{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}html.plt-mobile ion-app [contenteditable]{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}ion-app.force-statusbar-padding{--ion-safe-area-top:20px}\";\nconst IonAppStyle0 = appCss;\nconst App = /*@__PURE__*/proxyCustomElement(class App extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n  }\n  componentDidLoad() {\n    if (Build.isBrowser) {\n      rIC(async () => {\n        const isHybrid = isPlatform(window, 'hybrid');\n        if (!config.getBoolean('_testing')) {\n          import('./index9.js').then(module => module.startTapClick(config));\n        }\n        if (config.getBoolean('statusTap', isHybrid)) {\n          import('./status-tap.js').then(module => module.startStatusTap());\n        }\n        if (config.getBoolean('inputShims', needInputShims())) {\n          /**\n           * needInputShims() ensures that only iOS and Android\n           * platforms proceed into this block.\n           */\n          const platform = isPlatform(window, 'ios') ? 'ios' : 'android';\n          import('./input-shims.js').then(module => module.startInputShims(config, platform));\n        }\n        const hardwareBackButtonModule = await import('./hardware-back-button.js');\n        const supportsHardwareBackButtonEvents = isHybrid || shouldUseCloseWatcher();\n        if (config.getBoolean('hardwareBackButton', supportsHardwareBackButtonEvents)) {\n          hardwareBackButtonModule.startHardwareBackButton();\n        } else {\n          /**\n           * If an app sets hardwareBackButton: false and experimentalCloseWatcher: true\n           * then the close watcher will not be used.\n           */\n          if (shouldUseCloseWatcher()) {\n            printIonWarning('experimentalCloseWatcher was set to `true`, but hardwareBackButton was set to `false`. Both config options must be `true` for the Close Watcher API to be used.');\n          }\n          hardwareBackButtonModule.blockHardwareBackButton();\n        }\n        if (typeof window !== 'undefined') {\n          import('./keyboard2.js').then(module => module.startKeyboardAssist(window));\n        }\n        import('./focus-visible.js').then(module => this.focusVisible = module.startFocusVisible());\n      });\n    }\n  }\n  /**\n   * @internal\n   * Used to set focus on an element that uses `ion-focusable`.\n   * Do not use this if focusing the element as a result of a keyboard\n   * event as the focus utility should handle this for us. This method\n   * should be used when we want to programmatically focus an element as\n   * a result of another user action. (Ex: We focus the first element\n   * inside of a popover when the user presents it, but the popover is not always\n   * presented as a result of keyboard action.)\n   */\n  async setFocus(elements) {\n    if (this.focusVisible) {\n      this.focusVisible.setFocus(elements);\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      key: '0ac01df6d90d8185017e1f8e8f02cdf407e6c94b',\n      class: {\n        [mode]: true,\n        'ion-page': true,\n        'force-statusbar-padding': config.getBoolean('_forceStatusbarPadding')\n      }\n    });\n  }\n  get el() {\n    return this;\n  }\n  static get style() {\n    return IonAppStyle0;\n  }\n}, [0, \"ion-app\", {\n  \"setFocus\": [64]\n}]);\nconst needInputShims = () => {\n  /**\n   * iOS always needs input shims\n   */\n  const needsShimsIOS = isPlatform(window, 'ios') && isPlatform(window, 'mobile');\n  if (needsShimsIOS) {\n    return true;\n  }\n  /**\n   * Android only needs input shims when running\n   * in the browser and only if the browser is using the\n   * new Chrome 108+ resize behavior: https://developer.chrome.com/blog/viewport-resize-behavior/\n   */\n  const isAndroidMobileWeb = isPlatform(window, 'android') && isPlatform(window, 'mobileweb');\n  if (isAndroidMobileWeb) {\n    return true;\n  }\n  return false;\n};\nconst rIC = callback => {\n  if ('requestIdleCallback' in window) {\n    window.requestIdleCallback(callback);\n  } else {\n    setTimeout(callback, 32);\n  }\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-app\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-app\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, App);\n        }\n        break;\n    }\n  });\n}\nconst IonApp = App;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonApp, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","Build","h","Host","shouldUseCloseWatcher","p","printIonWarning","b","getIonMode","c","config","a","isPlatform","appCss","IonAppStyle0","App","constructor","__registerHost","componentDidLoad","isBrowser","rIC","isHybrid","window","getBoolean","then","module","startTapClick","startStatusTap","needInputShims","platform","startInputShims","hardwareBackButtonModule","supportsHardwareBackButtonEvents","startHardwareBackButton","blockHardwareBackButton","startKeyboardAssist","focusVisible","startFocusVisible","setFocus","elements","render","mode","key","class","el","style","needsShimsIOS","isAndroidMobileWeb","callback","requestIdleCallback","setTimeout","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonApp","defineCustomElement"],"sources":["D:/CIT/SEM 6/17MDCEL4 - Full Stack Web Application Development Laboratory/Online-Voting-Portal/client/node_modules/@ionic/core/components/ion-app.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nimport { shouldUseCloseWatcher } from './hardware-back-button.js';\nimport { p as printIonWarning } from './index6.js';\nimport { b as getIonMode, c as config, a as isPlatform } from './ionic-global.js';\n\nconst appCss = \"html.plt-mobile ion-app{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}html.plt-mobile ion-app [contenteditable]{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}ion-app.force-statusbar-padding{--ion-safe-area-top:20px}\";\nconst IonAppStyle0 = appCss;\n\nconst App = /*@__PURE__*/ proxyCustomElement(class App extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n    }\n    componentDidLoad() {\n        if (Build.isBrowser) {\n            rIC(async () => {\n                const isHybrid = isPlatform(window, 'hybrid');\n                if (!config.getBoolean('_testing')) {\n                    import('./index9.js').then((module) => module.startTapClick(config));\n                }\n                if (config.getBoolean('statusTap', isHybrid)) {\n                    import('./status-tap.js').then((module) => module.startStatusTap());\n                }\n                if (config.getBoolean('inputShims', needInputShims())) {\n                    /**\n                     * needInputShims() ensures that only iOS and Android\n                     * platforms proceed into this block.\n                     */\n                    const platform = isPlatform(window, 'ios') ? 'ios' : 'android';\n                    import('./input-shims.js').then((module) => module.startInputShims(config, platform));\n                }\n                const hardwareBackButtonModule = await import('./hardware-back-button.js');\n                const supportsHardwareBackButtonEvents = isHybrid || shouldUseCloseWatcher();\n                if (config.getBoolean('hardwareBackButton', supportsHardwareBackButtonEvents)) {\n                    hardwareBackButtonModule.startHardwareBackButton();\n                }\n                else {\n                    /**\n                     * If an app sets hardwareBackButton: false and experimentalCloseWatcher: true\n                     * then the close watcher will not be used.\n                     */\n                    if (shouldUseCloseWatcher()) {\n                        printIonWarning('experimentalCloseWatcher was set to `true`, but hardwareBackButton was set to `false`. Both config options must be `true` for the Close Watcher API to be used.');\n                    }\n                    hardwareBackButtonModule.blockHardwareBackButton();\n                }\n                if (typeof window !== 'undefined') {\n                    import('./keyboard2.js').then((module) => module.startKeyboardAssist(window));\n                }\n                import('./focus-visible.js').then((module) => (this.focusVisible = module.startFocusVisible()));\n            });\n        }\n    }\n    /**\n     * @internal\n     * Used to set focus on an element that uses `ion-focusable`.\n     * Do not use this if focusing the element as a result of a keyboard\n     * event as the focus utility should handle this for us. This method\n     * should be used when we want to programmatically focus an element as\n     * a result of another user action. (Ex: We focus the first element\n     * inside of a popover when the user presents it, but the popover is not always\n     * presented as a result of keyboard action.)\n     */\n    async setFocus(elements) {\n        if (this.focusVisible) {\n            this.focusVisible.setFocus(elements);\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '0ac01df6d90d8185017e1f8e8f02cdf407e6c94b', class: {\n                [mode]: true,\n                'ion-page': true,\n                'force-statusbar-padding': config.getBoolean('_forceStatusbarPadding'),\n            } }));\n    }\n    get el() { return this; }\n    static get style() { return IonAppStyle0; }\n}, [0, \"ion-app\", {\n        \"setFocus\": [64]\n    }]);\nconst needInputShims = () => {\n    /**\n     * iOS always needs input shims\n     */\n    const needsShimsIOS = isPlatform(window, 'ios') && isPlatform(window, 'mobile');\n    if (needsShimsIOS) {\n        return true;\n    }\n    /**\n     * Android only needs input shims when running\n     * in the browser and only if the browser is using the\n     * new Chrome 108+ resize behavior: https://developer.chrome.com/blog/viewport-resize-behavior/\n     */\n    const isAndroidMobileWeb = isPlatform(window, 'android') && isPlatform(window, 'mobileweb');\n    if (isAndroidMobileWeb) {\n        return true;\n    }\n    return false;\n};\nconst rIC = (callback) => {\n    if ('requestIdleCallback' in window) {\n        window.requestIdleCallback(callback);\n    }\n    else {\n        setTimeout(callback, 32);\n    }\n};\nfunction defineCustomElement$1() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-app\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-app\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, App);\n            }\n            break;\n    } });\n}\n\nconst IonApp = App;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonApp, defineCustomElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}