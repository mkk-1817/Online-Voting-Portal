{"ast":null,"code":"var _jsxFileName = \"E:\\\\Online-Voting-Portal\\\\client\\\\src\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    mobile: '',\n    password: '',\n    confirmPassword: '',\n    voterId: ''\n  });\n  const [emailVerificationSent, setEmailVerificationSent] = useState(false);\n  const [otp, setOTP] = useState('');\n  const [verificationStatus, setVerificationStatus] = useState('');\n  const [passwordConstraints, setPasswordConstraints] = useState(''); // Initialize with empty string or default constraints message\n\n  useEffect(() => {\n    // Set initial password constraints message\n    const initialConstraints = 'Password must be at least 8 characters long, contain at least one digit, and one special character.';\n    setPasswordConstraints(initialConstraints);\n  }, []);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEmailVerify = async () => {\n    try {\n      console.log('Email to be verified:', formData.email);\n      const response = await axios.post('http://localhost:3001/sendotp', {\n        email: formData.email\n      });\n      if (response.status === 200) {\n        setEmailVerificationSent(true);\n        setVerificationStatus('');\n      } else {\n        throw new Error('Failed to send OTP');\n      }\n    } catch (error) {\n      console.error(error);\n      setVerificationStatus('Failed to send OTP. Please try again.');\n    }\n  };\n  const handleVerifyOTP = async () => {\n    try {\n      console.log('Entered OTP:', otp);\n      const response = await axios.post('http://localhost:3001/verifyotp', {\n        email: formData.email,\n        enteredOTP: otp\n      });\n      if (response.status === 200) {\n        setVerificationStatus(response.data.message);\n        // Clear OTP from state on successful verification\n        setOTP('');\n      } else {\n        throw new Error('Invalid OTP');\n      }\n    } catch (error) {\n      console.error(error);\n      setVerificationStatus('Invalid OTP. Please try again.');\n    }\n  };\n  const handleSignUp = async e => {\n    e.preventDefault();\n    if (!emailVerificationSent) {\n      setVerificationStatus('Please verify your email first.');\n      return;\n    }\n\n    // Check if OTP has been successfully verified\n    if (!verificationStatus.includes('successful')) {\n      setVerificationStatus('Please verify your email with OTP first.');\n      return;\n    }\n\n    // Check if password and confirm password match\n    if (formData.password !== formData.confirmPassword) {\n      alert('Password and confirm password do not match.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3001/signup', formData);\n      if (response.status === 200) {\n        alert('User signed up successfully!');\n        // Redirect to the voter page after successful signup\n        window.location.href = '/VoterPage';\n      } else {\n        throw new Error('Signup failed');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Signup failed. Please check details.');\n    }\n  };\n  const handlePasswordChange = e => {\n    const password = e.target.value;\n    // Password constraints\n    const constraints = [];\n    if (password.length < 8) {\n      constraints.push('Password must be at least 8 characters long.');\n    }\n    if (!/\\d/.test(password)) {\n      constraints.push('Password must contain at least one digit.');\n    }\n    if (!/[!@#$%^&*]/.test(password)) {\n      constraints.push('Password must contain at least one special character.');\n    }\n    const constraintsMessage = constraints.length > 0 ? constraints.join(' ') : 'Password meets requirements.';\n    setPasswordConstraints(constraintsMessage);\n    setFormData({\n      ...formData,\n      password\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-with-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"verify-button\",\n          onClick: handleEmailVerify,\n          disabled: emailVerificationSent,\n          children: emailVerificationSent ? 'Verified' : 'Verify'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), emailVerificationSent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOTP(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleVerifyOTP,\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mobile\",\n        children: \"Mobile Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"mobile\",\n        name: \"mobile\",\n        value: formData.mobile,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handlePasswordChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), passwordConstraints && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"password-constraints\",\n        children: passwordConstraints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"voterId\",\n        children: \"Voter ID Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"voterId\",\n        name: \"voterId\",\n        value: formData.voterId,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"link-text\",\n      children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 3\n    }, this), verificationStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"verification-message\",\n      children: verificationStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"QmsUZEV5BZ6kCmFOKTllixZfMvs=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","SignUp","_s","formData","setFormData","username","email","mobile","password","confirmPassword","voterId","emailVerificationSent","setEmailVerificationSent","otp","setOTP","verificationStatus","setVerificationStatus","passwordConstraints","setPasswordConstraints","initialConstraints","handleChange","e","target","name","value","handleEmailVerify","console","log","response","post","status","Error","error","handleVerifyOTP","enteredOTP","data","message","handleSignUp","preventDefault","includes","alert","window","location","href","handlePasswordChange","constraints","length","push","test","constraintsMessage","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","onClick","disabled","placeholder","to","_c","$RefreshReg$"],"sources":["E:/Online-Voting-Portal/client/src/SignUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './SignUp.css';\r\n\r\nconst SignUp = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    mobile: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    voterId: ''\r\n  });\r\n  const [emailVerificationSent, setEmailVerificationSent] = useState(false);\r\n  const [otp, setOTP] = useState('');\r\n  const [verificationStatus, setVerificationStatus] = useState('');\r\n  const [passwordConstraints, setPasswordConstraints] = useState(''); // Initialize with empty string or default constraints message\r\n\r\n  useEffect(() => {\r\n    // Set initial password constraints message\r\n    const initialConstraints = 'Password must be at least 8 characters long, contain at least one digit, and one special character.';\r\n    setPasswordConstraints(initialConstraints);\r\n  }, []);\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEmailVerify = async () => {\r\n    try {\r\n      console.log('Email to be verified:', formData.email);\r\n      const response = await axios.post('http://localhost:3001/sendotp', { email: formData.email });\r\n      if (response.status === 200) {\r\n        setEmailVerificationSent(true);\r\n        setVerificationStatus('');\r\n      } else {\r\n        throw new Error('Failed to send OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setVerificationStatus('Failed to send OTP. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    try {\r\n      console.log('Entered OTP:', otp);\r\n      const response = await axios.post('http://localhost:3001/verifyotp', { email: formData.email, enteredOTP: otp });\r\n      if (response.status === 200) {\r\n        setVerificationStatus(response.data.message);\r\n        // Clear OTP from state on successful verification\r\n        setOTP('');\r\n      } else {\r\n        throw new Error('Invalid OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setVerificationStatus('Invalid OTP. Please try again.');\r\n    }\r\n  };\r\n\r\nconst handleSignUp = async (e) => {\r\n  e.preventDefault();\r\n  if (!emailVerificationSent) {\r\n    setVerificationStatus('Please verify your email first.');\r\n    return;\r\n  }\r\n\r\n  // Check if OTP has been successfully verified\r\n  if (!verificationStatus.includes('successful')) {\r\n    setVerificationStatus('Please verify your email with OTP first.');\r\n    return;\r\n  }\r\n\r\n  // Check if password and confirm password match\r\n  if (formData.password !== formData.confirmPassword) {\r\n    alert('Password and confirm password do not match.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:3001/signup', formData);\r\n    if (response.status === 200) {\r\n      alert('User signed up successfully!');\r\n      // Redirect to the voter page after successful signup\r\n      window.location.href = '/VoterPage';\r\n    } else {\r\n      throw new Error('Signup failed');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert('Signup failed. Please check details.');\r\n  }\r\n};\r\n\r\n\r\nconst handlePasswordChange = (e) => {\r\n  const password = e.target.value;\r\n  // Password constraints\r\n  const constraints = [];\r\n  if (password.length < 8) {\r\n    constraints.push('Password must be at least 8 characters long.');\r\n  }\r\n  if (!/\\d/.test(password)) {\r\n    constraints.push('Password must contain at least one digit.');\r\n  }\r\n  if (!/[!@#$%^&*]/.test(password)) {\r\n    constraints.push('Password must contain at least one special character.');\r\n  }\r\n  const constraintsMessage = constraints.length > 0 ? constraints.join(' ') : 'Password meets requirements.';\r\n  setPasswordConstraints(constraintsMessage);\r\n  setFormData({ ...formData, password });\r\n};\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n  <h2>Sign Up</h2>\r\n  <form onSubmit={handleSignUp}>\r\n    <label htmlFor=\"username\">Username:</label>\r\n    <input type=\"text\" id=\"username\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n    <label htmlFor=\"email\">Email:</label>\r\n    <div className=\"input-with-button\">\r\n      <input type=\"email\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n      <button type=\"button\" className=\"verify-button\" onClick={handleEmailVerify} disabled={emailVerificationSent}>\r\n        {emailVerificationSent ? 'Verified' : 'Verify'}\r\n      </button>\r\n    </div>\r\n    {emailVerificationSent && (\r\n      <div className=\"otp-container\">\r\n        <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOTP(e.target.value)} />\r\n        <button type=\"button\" onClick={handleVerifyOTP}>Verify OTP</button>\r\n      </div>\r\n    )}\r\n    <label htmlFor=\"mobile\">Mobile Number:</label>\r\n    <input type=\"text\" id=\"mobile\" name=\"mobile\" value={formData.mobile} onChange={handleChange} required />\r\n    \r\n    \r\n    \r\n    <label htmlFor=\"password\">Password:</label>\r\n    <input type=\"password\" id=\"password\" name=\"password\" value={formData.password} onChange={handlePasswordChange} required />\r\n    {/* Password constraints displayed here */}\r\n    {passwordConstraints && <p className=\"password-constraints\">{passwordConstraints}</p>}    \r\n    <br></br>\r\n    <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n    <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={formData.confirmPassword} onChange={handleChange} required />\r\n    <label htmlFor=\"voterId\">Voter ID Number:</label>\r\n    <input type=\"text\" id=\"voterId\" name=\"voterId\" value={formData.voterId} onChange={handleChange} required />\r\n    <button type=\"submit\">Sign Up</button>\r\n  </form>\r\n  <p className=\"link-text\">Already a user? <Link to=\"/login\">Login</Link></p>\r\n  {verificationStatus && <p className=\"verification-message\">{verificationStatus}</p>}\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}